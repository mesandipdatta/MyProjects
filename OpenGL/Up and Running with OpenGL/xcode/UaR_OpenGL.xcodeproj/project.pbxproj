// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXAggregateTarget section */
		22E607D27CD8475BB03D16D6 /* ZERO_CHECK */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 75619114232F48628BCB9B58 /* Build configuration list for PBXAggregateTarget "ZERO_CHECK" */;
			buildPhases = (
				177B1E82377A4F019A75D6B4 /* CMake Rules */,
			);
			dependencies = (
			);
			name = ZERO_CHECK;
			productName = ZERO_CHECK;
		};
		5EDEBE138CD74C5C99D0B41D /* install */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 90A558FEE59A45F2920545FB /* Build configuration list for PBXAggregateTarget "install" */;
			buildPhases = (
				80AA86DCD3C84B61A4F17415 /* CMake PostBuild Rules */,
			);
			dependencies = (
				20035DC283D84100BCB9D5A3 /* PBXTargetDependency */,
			);
			name = install;
			productName = install;
		};
		77BDA20525574D76B6F8AB96 /* uninstall */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 89C17EBEED1D4340AC773629 /* Build configuration list for PBXAggregateTarget "uninstall" */;
			buildPhases = (
				4ADB940176944A92BCB9DB99 /* CMake Rules */,
			);
			dependencies = (
			);
			name = uninstall;
			productName = uninstall;
		};
		B0F4BF1CD07B49AC9D598B28 /* ALL_BUILD */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 3E40C066339D4ECEB1CBC630 /* Build configuration list for PBXAggregateTarget "ALL_BUILD" */;
			buildPhases = (
				2EAF04D3C9FC404182F4E428 /* CMake Rules */,
			);
			dependencies = (
				B288258EB82B4970A52AEC95 /* PBXTargetDependency */,
				910AA26D81634ABAA45A2AA9 /* PBXTargetDependency */,
				30A0ECFCA60D4D03944FAC97 /* PBXTargetDependency */,
				DC0D82A6891E4F2284AEF1B3 /* PBXTargetDependency */,
				2E06DB8692BD4FA1AFFB6AFE /* PBXTargetDependency */,
				10A0C1319F9C46F1AE0BBD41 /* PBXTargetDependency */,
				0BBF867D96EF4C8BB6B3CEB4 /* PBXTargetDependency */,
				2C3D568B9864476C84E28901 /* PBXTargetDependency */,
				BD23DBA4F708499297ECFD2C /* PBXTargetDependency */,
				42A51F07AD0042FDAA06D6B1 /* PBXTargetDependency */,
				C4E1194D02C944809162B37B /* PBXTargetDependency */,
				7CF2B0C2DEB0446FBB8BF745 /* PBXTargetDependency */,
				31F4D385D40243E384C3F213 /* PBXTargetDependency */,
				F56B9123D522447B94842307 /* PBXTargetDependency */,
				F5651803B21049028D291F4E /* PBXTargetDependency */,
				424CF74934E24DF497991BD4 /* PBXTargetDependency */,
				9FE6E78AB7B2499888CBAC0A /* PBXTargetDependency */,
				5BAF48931C364F36B68ADA04 /* PBXTargetDependency */,
				F9DE76042616433BAAF5F6A6 /* PBXTargetDependency */,
				E64FBEE5CC70453EA5CAF9FD /* PBXTargetDependency */,
				2A515FC99C554F9583C01554 /* PBXTargetDependency */,
				636DAACD909C4F63B7D5F3DC /* PBXTargetDependency */,
				9291220B3BF84D5FBF848D46 /* PBXTargetDependency */,
				5307C576FBFF4CCABE9CAF09 /* PBXTargetDependency */,
				6133088C36564E08B93562AA /* PBXTargetDependency */,
				5F8DCD6A7BA04357BBAD475D /* PBXTargetDependency */,
				697B1221F68045C1A04297EF /* PBXTargetDependency */,
				970C4E1713E04B068518F09B /* PBXTargetDependency */,
				BD1B9F46B922486D8FCCAB27 /* PBXTargetDependency */,
				B90910F85BE5469BBBEEEFAC /* PBXTargetDependency */,
				1A612168FDFE40ADBDE1AEC2 /* PBXTargetDependency */,
				3808BE080E5C4D26A1B803C5 /* PBXTargetDependency */,
				C0C44487E1A6484CB8DDD504 /* PBXTargetDependency */,
				A60A7346A572467BBCED7614 /* PBXTargetDependency */,
				552DCF0B7FFC49C1B5841130 /* PBXTargetDependency */,
				9316BBDF36B64AE186EA13DB /* PBXTargetDependency */,
				FFEF1787492D428BAC035107 /* PBXTargetDependency */,
				DFF76F4342444843A48080BB /* PBXTargetDependency */,
			);
			name = ALL_BUILD;
			productName = ALL_BUILD;
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildFile section */
		039327E534AE49909C50D7DE /* Extensions.cpp in Sources */ = {isa = PBXBuildFile; fileRef = AE13F29CEF604B9F9E20E1A6 /* Extensions.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		070F6A81BBD04FD8AE80DFF1 /* GLFWwindow.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 68C6E476EC6A41B4BBDBA631 /* GLFWwindow.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		1457D9DC655D4AB7869FA6F6 /* init.c in Sources */ = {isa = PBXBuildFile; fileRef = A2B5477EE65748D1AAFBD7A4 /* init.c */; settings = {COMPILER_FLAGS = ""; }; };
		1948A0F768DE4B658D2C3D2F /* events.c in Sources */ = {isa = PBXBuildFile; fileRef = 5D4457F801D84145859DFA3E /* events.c */; settings = {COMPILER_FLAGS = ""; }; };
		1A8970B1B05145CEB99EB78A /* reopen.c in Sources */ = {isa = PBXBuildFile; fileRef = 20DA242D9A114C168197846B /* reopen.c */; settings = {COMPILER_FLAGS = ""; }; };
		1AB0987ABA154BBDA07BB3CE /* Texture.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 7701776C697945AE9B30943F /* Texture.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		1E33ECA5C9E5475CBCBCF636 /* TriangleBuffer.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 721B6D989EA0435C9E246E60 /* TriangleBuffer.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		269E25242403490498441223 /* Mouse.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 1F899CE34597487C8E2A9E91 /* Mouse.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		28AE32E07F13479AAA7B9309 /* ModelView.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 50250682522E4F2CB523F573 /* ModelView.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		2CB7A8C5354C4262AF0F452E /* Immediate.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 36366119BD12428A9007447D /* Immediate.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		33F6AE7AAAFC4467974483DD /* Lighting.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 4F0DE3ADBE60462EAD980C99 /* Lighting.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		350E250D24494028A06AEFF8 /* tinycthread.c in Sources */ = {isa = PBXBuildFile; fileRef = 93A92D4E3D25477FBCBD9810 /* tinycthread.c */; settings = {COMPILER_FLAGS = ""; }; };
		38D2FB50117B4A01B3317580 /* cocoa_monitor.m in Sources */ = {isa = PBXBuildFile; fileRef = B32302EFC86448C79D233A9F /* cocoa_monitor.m */; settings = {COMPILER_FLAGS = ""; }; };
		38D51902B22B4139BF624B0D /* cocoa_clipboard.m in Sources */ = {isa = PBXBuildFile; fileRef = FE096F8B25664BB38B057734 /* cocoa_clipboard.m */; settings = {COMPILER_FLAGS = ""; }; };
		39763E761EA14B7D90C11E13 /* gamma.c in Sources */ = {isa = PBXBuildFile; fileRef = 70645AF4436548C7A0BB3413 /* gamma.c */; settings = {COMPILER_FLAGS = ""; }; };
		39A369751BD24ADDB3DCA021 /* modes.c in Sources */ = {isa = PBXBuildFile; fileRef = 3DFA850F1BE6403487C5C7E2 /* modes.c */; settings = {COMPILER_FLAGS = ""; }; };
		3E59F6769DAE40059793E76C /* getopt.c in Sources */ = {isa = PBXBuildFile; fileRef = F830F8E6215741A4821D10A9 /* getopt.c */; settings = {COMPILER_FLAGS = ""; }; };
		40090D25A0D449F5A4C1DA2C /* fsaa.c in Sources */ = {isa = PBXBuildFile; fileRef = 696F3F39009E4CEABFC62E18 /* fsaa.c */; settings = {COMPILER_FLAGS = ""; }; };
		573BCF5541AE44A5AC70BC82 /* getopt.c in Sources */ = {isa = PBXBuildFile; fileRef = 03F273576D084EE48B8197DC /* getopt.c */; settings = {COMPILER_FLAGS = ""; }; };
		5D8BA2423DD54883A071DBF6 /* ImmediateTriangles.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 8B987734F7314B138CA7FF39 /* ImmediateTriangles.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		5F1B2B0B3FC5480389CF8D08 /* iconify.c in Sources */ = {isa = PBXBuildFile; fileRef = DAB1D8CBB624482EADCE2CD7 /* iconify.c */; settings = {COMPILER_FLAGS = ""; }; };
		6A67C1097D8346D898E6C26F /* cocoa_gamma.c in Sources */ = {isa = PBXBuildFile; fileRef = 25612924124A411185C7E52F /* cocoa_gamma.c */; settings = {COMPILER_FLAGS = ""; }; };
		6B4DAD3840B14B9CAC48A760 /* threads.c in Sources */ = {isa = PBXBuildFile; fileRef = 31E6BFFCB11541EFB3339C30 /* threads.c */; settings = {COMPILER_FLAGS = ""; }; };
		6CFE66C846A843F6B714852C /* clipboard.c in Sources */ = {isa = PBXBuildFile; fileRef = 594CED62E60F4F8586ABC65A /* clipboard.c */; settings = {COMPILER_FLAGS = ""; }; };
		71FD68C8466E458D8DFA57CA /* title.c in Sources */ = {isa = PBXBuildFile; fileRef = C6C4D3D512EA4C9C97A8BC1E /* title.c */; settings = {COMPILER_FLAGS = ""; }; };
		72D20C1F17BD4DE0BE9A2319 /* DynamicMesh.cpp in Sources */ = {isa = PBXBuildFile; fileRef = D06F4F767EB44253A489AC9E /* DynamicMesh.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		73FC78C134F0459488BDA609 /* getopt.c in Sources */ = {isa = PBXBuildFile; fileRef = 89C9DDEE70A045E4A085FF99 /* getopt.c */; settings = {COMPILER_FLAGS = ""; }; };
		80446A59D95A4155A494A63C /* Keyboard.cpp in Sources */ = {isa = PBXBuildFile; fileRef = CBD41FA22E2040CD8C524FB4 /* Keyboard.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		849E8A1D29F84A1FB1DF4283 /* TextureLoader.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 61BA80EA69564CC898C6883C /* TextureLoader.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		89F91FCA0A954B48962D40C2 /* sharing.c in Sources */ = {isa = PBXBuildFile; fileRef = DA6EA3FCABE5426597050ED6 /* sharing.c */; settings = {COMPILER_FLAGS = ""; }; };
		8BC90A2E166242599F41F40F /* cocoa_time.c in Sources */ = {isa = PBXBuildFile; fileRef = D5E31263595D460B95FED9E4 /* cocoa_time.c */; settings = {COMPILER_FLAGS = ""; }; };
		966F96813D0449EE8A91B749 /* cocoa_window.m in Sources */ = {isa = PBXBuildFile; fileRef = 9AD0A99E256D4F3D8E6E83CA /* cocoa_window.m */; settings = {COMPILER_FLAGS = ""; }; };
		97A6E6A39DEA439AAB161393 /* cocoa_init.m in Sources */ = {isa = PBXBuildFile; fileRef = 2891FAFCEF394868B9A064AD /* cocoa_init.m */; settings = {COMPILER_FLAGS = ""; }; };
		989D75A456B548CAAA2ABBBF /* peter.c in Sources */ = {isa = PBXBuildFile; fileRef = 69DD8DBEFB864A7DBB37C115 /* peter.c */; settings = {COMPILER_FLAGS = ""; }; };
		99ADE5FE42CB4CFABB857294 /* getopt.c in Sources */ = {isa = PBXBuildFile; fileRef = E8852B29F8F0414F8DFA487D /* getopt.c */; settings = {COMPILER_FLAGS = ""; }; };
		9C7440C9A12541F0AEA6F9F9 /* GLFWApp.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E037D7CE5DD7403B9B583A7C /* GLFWApp.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		9CCCFD6D61E44D6C9A53811C /* context.c in Sources */ = {isa = PBXBuildFile; fileRef = 10F3E076EEC74492B19FC155 /* context.c */; settings = {COMPILER_FLAGS = ""; }; };
		9D2D5393281D498AAB6C0EFF /* getopt.c in Sources */ = {isa = PBXBuildFile; fileRef = 50F50ADD9AB2403B848A7DBF /* getopt.c */; settings = {COMPILER_FLAGS = ""; }; };
		A7C001FC2F134F78B6F95CA2 /* Model.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 7597D7B466394F0A9DBDDD6B /* Model.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		A86DFB8076AC41E79A3ADC29 /* defaults.c in Sources */ = {isa = PBXBuildFile; fileRef = 73229BE1FF414D4194408CBC /* defaults.c */; settings = {COMPILER_FLAGS = ""; }; };
		AC44E6B443404DFF8E68C647 /* getopt.c in Sources */ = {isa = PBXBuildFile; fileRef = C311438E65B74228956AEA9A /* getopt.c */; settings = {COMPILER_FLAGS = ""; }; };
		AEBEA7C939824836BEB67697 /* windows.c in Sources */ = {isa = PBXBuildFile; fileRef = 68B20A30037846C18D696DC1 /* windows.c */; settings = {COMPILER_FLAGS = ""; }; };
		B47A5C6043BC4B338DCC4382 /* Cube.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C942EACD9D904781966EA783 /* Cube.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		B47FE29E0C1C44EF825671F6 /* gamma.c in Sources */ = {isa = PBXBuildFile; fileRef = 901BF47746054D74A783EE9B /* gamma.c */; settings = {COMPILER_FLAGS = ""; }; };
		B607928751E64A13875975F7 /* monitor.c in Sources */ = {isa = PBXBuildFile; fileRef = 6B7DAF45F99B4C96B15CE209 /* monitor.c */; settings = {COMPILER_FLAGS = ""; }; };
		C6FF6147DBAB429494C183A6 /* glfwinfo.c in Sources */ = {isa = PBXBuildFile; fileRef = EF2EBF04EB3A431CA3DD8CDC /* glfwinfo.c */; settings = {COMPILER_FLAGS = ""; }; };
		CEE2A4A183364AD5A6B8A589 /* joysticks.c in Sources */ = {isa = PBXBuildFile; fileRef = F6A29D9FDAC645EE8DFE28B8 /* joysticks.c */; settings = {COMPILER_FLAGS = ""; }; };
		CEFF4C83B7014323B4F2E35F /* getopt.c in Sources */ = {isa = PBXBuildFile; fileRef = 30910260A74E4DC39033F473 /* getopt.c */; settings = {COMPILER_FLAGS = ""; }; };
		D0DEB34496BD404C9EE1FF8E /* window.c in Sources */ = {isa = PBXBuildFile; fileRef = 9646430E6E804F488852CC93 /* window.c */; settings = {COMPILER_FLAGS = ""; }; };
		D2412F912ADA4E46A3F10D92 /* accuracy.c in Sources */ = {isa = PBXBuildFile; fileRef = 97D8939A135C4D0BAF76705C /* accuracy.c */; settings = {COMPILER_FLAGS = ""; }; };
		E35CAD834A2747FB8251BA6F /* Version.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 4AA74625640E43F682651792 /* Version.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		E444FA26EF9E4EDB96247A23 /* clipboard.c in Sources */ = {isa = PBXBuildFile; fileRef = E7A1A8811BE6404FBD8D0494 /* clipboard.c */; settings = {COMPILER_FLAGS = ""; }; };
		E7F1984366A64D65A71B941A /* input.c in Sources */ = {isa = PBXBuildFile; fileRef = F8AE1D767A76404FB54DE5A2 /* input.c */; settings = {COMPILER_FLAGS = ""; }; };
		E8CFA4E5803F49ACB889F3DA /* TriangleColorBuffer.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 256D05218A4545D69E6C6461 /* TriangleColorBuffer.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		E9AEE65BC81C46DDA2CB80C4 /* nsgl_context.m in Sources */ = {isa = PBXBuildFile; fileRef = 9F047CB89DDB4B84A720F159 /* nsgl_context.m */; settings = {COMPILER_FLAGS = ""; }; };
		F043AEF10FBC4C01B6C8C5AA /* cocoa_joystick.m in Sources */ = {isa = PBXBuildFile; fileRef = E02D2BAA36F74CFEB5C3127D /* cocoa_joystick.m */; settings = {COMPILER_FLAGS = ""; }; };
		F071F375369D44B9B7408855 /* joystick.c in Sources */ = {isa = PBXBuildFile; fileRef = F2A6854AB1BF4032BF84450E /* joystick.c */; settings = {COMPILER_FLAGS = ""; }; };
		F9D949B2CEB240DC98E74425 /* LightingAndTexture.cpp in Sources */ = {isa = PBXBuildFile; fileRef = A38FC68EB5E1405197A4523C /* LightingAndTexture.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		FAA548E4AF1C4F94AF76E46A /* TriangleOrtho.cpp in Sources */ = {isa = PBXBuildFile; fileRef = FEA7BBCFF1294D0F96425950 /* TriangleOrtho.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		FF7E0E379DC946C9B8A9A9AD /* time.c in Sources */ = {isa = PBXBuildFile; fileRef = 60A0D31B571649F486FF6E52 /* time.c */; settings = {COMPILER_FLAGS = ""; }; };
		FFB88D0E8CF0461FB28D9291 /* tearing.c in Sources */ = {isa = PBXBuildFile; fileRef = 040B43D26AAD4CF1B5935425 /* tearing.c */; settings = {COMPILER_FLAGS = ""; }; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		009A0F99E707468E9D7D9A17 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 20C48D31ACB5463EAC7ABDD0;
			remoteInfo = modes;
		};
		0694F67E01A14275953431D6 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22E607D27CD8475BB03D16D6;
			remoteInfo = ZERO_CHECK;
		};
		08571C7ABE624286B350F015 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FE80DAA424C34539BCB11065;
			remoteInfo = glfw;
		};
		0D4ED5EE5EA9434DA0E05B99 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22E607D27CD8475BB03D16D6;
			remoteInfo = ZERO_CHECK;
		};
		0FD77FA3C1564BDAA31E5EEE /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22E607D27CD8475BB03D16D6;
			remoteInfo = ZERO_CHECK;
		};
		11BB3CDAE8CA48799D47FA94 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 6F6EED88B3DB425A9D61F6D3;
			remoteInfo = Extensions;
		};
		142B91D5F7454757B81622DB /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22E607D27CD8475BB03D16D6;
			remoteInfo = ZERO_CHECK;
		};
		15590697ADAF45F48AC0B589 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22E607D27CD8475BB03D16D6;
			remoteInfo = ZERO_CHECK;
		};
		1BDF60E3E7344234A0F8A640 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FE80DAA424C34539BCB11065;
			remoteInfo = glfw;
		};
		2033836BCA3B4899B5BE70D2 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 6D0265E4A3E142FD8ED12B4C;
			remoteInfo = TextureLoader;
		};
		208DAB3C12A2492694DB0399 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 528194E3821740958EF2CE75;
			remoteInfo = GLFWwindow;
		};
		214DF67A22E246E1B7C9D9B9 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22E607D27CD8475BB03D16D6;
			remoteInfo = ZERO_CHECK;
		};
		25A6706F6F8C4159813025D2 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22E607D27CD8475BB03D16D6;
			remoteInfo = ZERO_CHECK;
		};
		2AA51BC50EA0413891C78E9A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22E607D27CD8475BB03D16D6;
			remoteInfo = ZERO_CHECK;
		};
		2C358AD6EB96421F9B72C2F5 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FE80DAA424C34539BCB11065;
			remoteInfo = glfw;
		};
		2F27FEA2B94E4D24AA5457BF /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D6420C90D62A49F2B3DBB851;
			remoteInfo = TriangleOrtho;
		};
		2F2EB778D46A4EA594E280C5 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2253DB912EC9487897AA9CFB;
			remoteInfo = fsaa;
		};
		305AB97F532D44629F7BD1A8 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = E990B241187D4676AFE3196C;
			remoteInfo = Keyboard;
		};
		3101DC112DA741489B8E0739 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FE80DAA424C34539BCB11065;
			remoteInfo = glfw;
		};
		310E574CD5C44BF39FB6CC4C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22E607D27CD8475BB03D16D6;
			remoteInfo = ZERO_CHECK;
		};
		31795BBAF7A349FFBDF22FF0 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 40547C360BB3497EA6E961D1;
			remoteInfo = joysticks;
		};
		3A55004DE8F1436BA139B085 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FE80DAA424C34539BCB11065;
			remoteInfo = glfw;
		};
		3AB58DA7552D4CB3B7B991BD /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FE80DAA424C34539BCB11065;
			remoteInfo = glfw;
		};
		3BAF18B314B3451E87F513AA /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = EFAF1251E5E04E03851A2167;
			remoteInfo = accuracy;
		};
		3E959825C4954814AA62C076 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FE80DAA424C34539BCB11065;
			remoteInfo = glfw;
		};
		4070FF05B22C4F4280C1E231 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = EBF2F60860E74912A92C33F3;
			remoteInfo = gamma;
		};
		417DBF4BC3CD4382BD2B2C2A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FE80DAA424C34539BCB11065;
			remoteInfo = glfw;
		};
		467349F973124273BBA2C80B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 63628BEB206C49AC8216E3FA;
			remoteInfo = Texture;
		};
		48FF4C62089C42F6ACC1029D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22E607D27CD8475BB03D16D6;
			remoteInfo = ZERO_CHECK;
		};
		4B26C2704F124217AA98EA7A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FE80DAA424C34539BCB11065;
			remoteInfo = glfw;
		};
		4C96FE24AE544527BCE6AA7D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = B725607715F44C7AB20FC473;
			remoteInfo = TriangleBuffer;
		};
		4CE060FE57204780A1D73A5F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FE80DAA424C34539BCB11065;
			remoteInfo = glfw;
		};
		4F1633413DAB46BA919BA826 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 61DCA32A67B741CCAF109782;
			remoteInfo = title;
		};
		4FA5CD074F7F42788544ACB0 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22E607D27CD8475BB03D16D6;
			remoteInfo = ZERO_CHECK;
		};
		5272B3CD1D53403E9DFFEAEB /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FE80DAA424C34539BCB11065;
			remoteInfo = glfw;
		};
		528DDD4DE10043E391837A15 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22E607D27CD8475BB03D16D6;
			remoteInfo = ZERO_CHECK;
		};
		5455F8B4889C409A8BC5BBBE /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22E607D27CD8475BB03D16D6;
			remoteInfo = ZERO_CHECK;
		};
		54DB4F6E730A49A1B1B30427 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FE80DAA424C34539BCB11065;
			remoteInfo = glfw;
		};
		55D735378D8647E4B2E23884 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FE80DAA424C34539BCB11065;
			remoteInfo = glfw;
		};
		596AAABC416E4A699548DF94 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FE80DAA424C34539BCB11065;
			remoteInfo = glfw;
		};
		5AD1652564BE4BD6AEFD947E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22E607D27CD8475BB03D16D6;
			remoteInfo = ZERO_CHECK;
		};
		60AF876BA9DD4DAA922160E1 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22E607D27CD8475BB03D16D6;
			remoteInfo = ZERO_CHECK;
		};
		66661C0566DE4494892BE42D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22E607D27CD8475BB03D16D6;
			remoteInfo = ZERO_CHECK;
		};
		6684A2BB3D8848F6B28542FE /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FE80DAA424C34539BCB11065;
			remoteInfo = glfw;
		};
		66A162C92FBA49C49EDE0557 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FE80DAA424C34539BCB11065;
			remoteInfo = glfw;
		};
		679227F49DF148559793B632 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 81ABEEC914CB44EDA5A5B108;
			remoteInfo = iconify;
		};
		6CD06D5BECD74EA5B97F8224 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 05AFCAE5FB794CB282804023;
			remoteInfo = glfwinfo;
		};
		6D8ECDC3C7E7413899CB5612 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22E607D27CD8475BB03D16D6;
			remoteInfo = ZERO_CHECK;
		};
		6DA66529EEAB4B1BA1DA9654 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = C15DCEF08B994A88A46BDADC;
			remoteInfo = Immediate;
		};
		6EBC1C37FFB148998FC981C8 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22E607D27CD8475BB03D16D6;
			remoteInfo = ZERO_CHECK;
		};
		703C51EF3D6A4B419B7478A4 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22E607D27CD8475BB03D16D6;
			remoteInfo = ZERO_CHECK;
		};
		71273C9B09F344ED898C6F75 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = CB4C2987E7DE44DEA78E6502;
			remoteInfo = peter;
		};
		728E8D5882CE4F91A653C7B1 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 058B7724999243C3863A1ACE;
			remoteInfo = ImmediateTriangles;
		};
		73568395A1414272B6CBAAD1 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 3E1A50B68CF14439A664AF6F;
			remoteInfo = sharing;
		};
		76DA2908070341BA9ADD2315 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FE80DAA424C34539BCB11065;
			remoteInfo = glfw;
		};
		7B2544AE65C04AACB6E41D7B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 40CFB08D3B9E4A1EA252DDF2;
			remoteInfo = Cube;
		};
		7D5A0449858F42B790667E73 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22E607D27CD8475BB03D16D6;
			remoteInfo = ZERO_CHECK;
		};
		838DF657628141BCA948FF6E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 52599A59C87244E9820B3355;
			remoteInfo = Mouse;
		};
		8479BE137E544B2E8A79971B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22E607D27CD8475BB03D16D6;
			remoteInfo = ZERO_CHECK;
		};
		86C8A605C6C84418AD2F27C5 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 5E81D121A98141FCA96D94EF;
			remoteInfo = ModelView;
		};
		87FABC32134646C285FA98A0 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FE80DAA424C34539BCB11065;
			remoteInfo = glfw;
		};
		8A4B903FF7CB4E5B9A74320F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D9FE1C1E909748179D6C6F9E;
			remoteInfo = clipboard;
		};
		8B8B2B29708C428FB9D9B4CB /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FE80DAA424C34539BCB11065;
			remoteInfo = glfw;
		};
		8B8EAABA68FF47D3BEA24753 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FE80DAA424C34539BCB11065;
			remoteInfo = glfw;
		};
		8C1B76DAF9D945B9B6740797 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FE80DAA424C34539BCB11065;
			remoteInfo = glfw;
		};
		8E6B4F15066B4E01A2CEBD25 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = C2D3744568E14F0EB635740A;
			remoteInfo = defaults;
		};
		8F9EF5BF7C1C4C4F96987BD6 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FE80DAA424C34539BCB11065;
			remoteInfo = glfw;
		};
		914D877FE3194D219BA60BBE /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FE80DAA424C34539BCB11065;
			remoteInfo = glfw;
		};
		93E54DA518A546BE9F8AC985 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22E607D27CD8475BB03D16D6;
			remoteInfo = ZERO_CHECK;
		};
		952ADB6BB1BC48B4B4700D9A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FE80DAA424C34539BCB11065;
			remoteInfo = glfw;
		};
		96818417E17342C9807583CC /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22E607D27CD8475BB03D16D6;
			remoteInfo = ZERO_CHECK;
		};
		99188C41702D446893FC7C47 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FE80DAA424C34539BCB11065;
			remoteInfo = glfw;
		};
		99466D21DFD141298698EA5E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = B89E2379902E484EA404EEC7;
			remoteInfo = windows;
		};
		9C3ACA3E079D4F97BE168AFB /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22E607D27CD8475BB03D16D6;
			remoteInfo = ZERO_CHECK;
		};
		9D46EA602F5447DE8225A2B4 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22E607D27CD8475BB03D16D6;
			remoteInfo = ZERO_CHECK;
		};
		9F3E1848968F4DE7BECE845D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 1171954142374CDB91225F42;
			remoteInfo = Version;
		};
		A7FA101A693644D6AE9F6A87 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = A0906934A4E24847B4AA7395;
			remoteInfo = Lighting;
		};
		A9A2B7B2D91A45C897D617B8 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FE80DAA424C34539BCB11065;
			remoteInfo = glfw;
		};
		AD0BD50A034F46E89E78F677 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22E607D27CD8475BB03D16D6;
			remoteInfo = ZERO_CHECK;
		};
		AD2657866E6A494A805BC203 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = EB74C5BFB1394C7E87C180FE;
			remoteInfo = Model;
		};
		AD4C82C30C744FE79F628DF5 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FE80DAA424C34539BCB11065;
			remoteInfo = glfw;
		};
		AD92A79FA5E64B738D404EB8 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = B8F90B86B4744756A9857A68;
			remoteInfo = GLFWApp;
		};
		B261E0E6E53248ABBFD30DF0 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22E607D27CD8475BB03D16D6;
			remoteInfo = ZERO_CHECK;
		};
		B4C886A47C4049A294817BF9 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22E607D27CD8475BB03D16D6;
			remoteInfo = ZERO_CHECK;
		};
		B5752E546CFD4DFB866660EF /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = F068B936183646BC9C2A99A3;
			remoteInfo = LightingAndTexture;
		};
		B5B658286F7749BEB77480C8 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 32616AC0D7064BFCB3560C7A;
			remoteInfo = tearing;
		};
		B6CCCF57BB244C2AB28BC1B9 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FE80DAA424C34539BCB11065;
			remoteInfo = glfw;
		};
		B94DC222D493415E850C6685 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FE80DAA424C34539BCB11065;
			remoteInfo = glfw;
		};
		BAEC641BEBD2490BB52F2047 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FE80DAA424C34539BCB11065;
			remoteInfo = glfw;
		};
		BD5AC9EE89B54A44BA2B9AA2 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FE80DAA424C34539BCB11065;
			remoteInfo = glfw;
		};
		BEBCCB8DC99B49098DF921BC /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 38E4AD2C2FE34AD0850ABE2A;
			remoteInfo = TriangleColorBuffer;
		};
		C0D54BE3AEAD4EF5ABAD6ED2 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22E607D27CD8475BB03D16D6;
			remoteInfo = ZERO_CHECK;
		};
		C12B6E5E1B114E31895C3A36 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FE80DAA424C34539BCB11065;
			remoteInfo = glfw;
		};
		C2DD8ACED0A04522878DC559 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22E607D27CD8475BB03D16D6;
			remoteInfo = ZERO_CHECK;
		};
		C385553D988841E18B5BBE31 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FE80DAA424C34539BCB11065;
			remoteInfo = glfw;
		};
		C80B966217914ADDA7D1A8BF /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22E607D27CD8475BB03D16D6;
			remoteInfo = ZERO_CHECK;
		};
		CD6EA7754143445EA4E4F1D9 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 1AFC9FE40C2B4F4D9E7A530C;
			remoteInfo = reopen;
		};
		D70D7FD069E2414592886C24 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FE80DAA424C34539BCB11065;
			remoteInfo = glfw;
		};
		D8659861858643D7BFBC417D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22E607D27CD8475BB03D16D6;
			remoteInfo = ZERO_CHECK;
		};
		D89C8C9149444CC99027AB79 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22E607D27CD8475BB03D16D6;
			remoteInfo = ZERO_CHECK;
		};
		DC9E4381537D481B8103BF68 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = B0F4BF1CD07B49AC9D598B28;
			remoteInfo = ALL_BUILD;
		};
		DD319D3A03CA4B22A0203696 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22E607D27CD8475BB03D16D6;
			remoteInfo = ZERO_CHECK;
		};
		E042D53ED00B4D4CB4AEBFF4 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22E607D27CD8475BB03D16D6;
			remoteInfo = ZERO_CHECK;
		};
		E3BE3796DD69491896628957 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D55B409F4E15442F9DA1B1FA;
			remoteInfo = DynamicMesh;
		};
		E5FF37E56335482F977FE7E0 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = EE93707E326E4231B9F1DCAC;
			remoteInfo = threads;
		};
		F0D175B365F7466890226C66 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FE80DAA424C34539BCB11065;
			remoteInfo = glfw;
		};
		F1733B9946C94397B9A8183E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FE80DAA424C34539BCB11065;
			remoteInfo = glfw;
		};
		F2107F047B3C447D8BC7F8EA /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 81DA1925DC1140D1917E0421;
			remoteInfo = events;
		};
		F58074D3EA464D99A542BCA0 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22E607D27CD8475BB03D16D6;
			remoteInfo = ZERO_CHECK;
		};
		F991AAFC683A45E8BE52ADEB /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22E607D27CD8475BB03D16D6;
			remoteInfo = ZERO_CHECK;
		};
		FD7DE194CF3A491AACB5789F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22E607D27CD8475BB03D16D6;
			remoteInfo = ZERO_CHECK;
		};
		FE73DB49F7E64982B7293324 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 26BABEEB8B04403F9FB5B420 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FE80DAA424C34539BCB11065;
			remoteInfo = glfw;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		004AC42AAE214FDF878B70F9 /* getopt.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = getopt.h; path = glfw/deps/getopt.h; sourceTree = SOURCE_ROOT; };
		03F273576D084EE48B8197DC /* getopt.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = getopt.c; path = glfw/deps/getopt.c; sourceTree = SOURCE_ROOT; };
		040B43D26AAD4CF1B5935425 /* tearing.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = tearing.c; path = glfw/tests/tearing.c; sourceTree = SOURCE_ROOT; };
		04C1825E12B241799F50FC48 /* Keyboard */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = Keyboard; sourceTree = BUILT_PRODUCTS_DIR; };
		059F7E997F6741B186AD2DD8 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		06171161D13E4B4CAAAA6D0E /* Info.plist */ = {isa = PBXFileReference; explicitFileType = sourcecode.text.plist; fileEncoding = 4; lastKnownFileType = text.plist; name = Info.plist; path = xcode/glfw/tests/CMakeFiles/windows.dir/Info.plist; sourceTree = SOURCE_ROOT; };
		07D7F872242845479B2093DB /* gamma */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = gamma; sourceTree = BUILT_PRODUCTS_DIR; };
		07F0C5C085994659B8EB61F4 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		0813CF6F1B6B1964005350E8 /* include */ = {isa = PBXFileReference; lastKnownFileType = folder; path = include; sourceTree = "<group>"; };
		0A485734ACD4437897751B27 /* TextureLoader */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = TextureLoader; sourceTree = BUILT_PRODUCTS_DIR; };
		10F3E076EEC74492B19FC155 /* context.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = context.c; path = glfw/src/context.c; sourceTree = SOURCE_ROOT; };
		1118C60B624C4D6EBD596AA4 /* Info.plist */ = {isa = PBXFileReference; explicitFileType = sourcecode.text.plist; fileEncoding = 4; lastKnownFileType = text.plist; name = Info.plist; path = xcode/glfw/tests/CMakeFiles/title.dir/Info.plist; sourceTree = SOURCE_ROOT; };
		11451BF8E67E495EA2B13320 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		132106F807D34D40B7583969 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		1515F078E0DD43CEA9C9AD92 /* Lighting */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = Lighting; sourceTree = BUILT_PRODUCTS_DIR; };
		18B35DBFD3BA4FD8B4AA4692 /* accuracy.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; path = accuracy.app; sourceTree = BUILT_PRODUCTS_DIR; };
		18EFC838171E4AF491A98A74 /* Info.plist */ = {isa = PBXFileReference; explicitFileType = sourcecode.text.plist; fileEncoding = 4; lastKnownFileType = text.plist; name = Info.plist; path = xcode/glfw/tests/CMakeFiles/threads.dir/Info.plist; sourceTree = SOURCE_ROOT; };
		195BECBAFFC14448982AB7AA /* Version */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = Version; sourceTree = BUILT_PRODUCTS_DIR; };
		1C2BAF077B0544AB9345535E /* getopt.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = getopt.h; path = glfw/deps/getopt.h; sourceTree = SOURCE_ROOT; };
		1D3FA608680A40D793E9AC30 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		1DB7A2ACDAB34C8BB51B5B62 /* internal.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = internal.h; path = glfw/src/internal.h; sourceTree = SOURCE_ROOT; };
		1F899CE34597487C8E2A9E91 /* Mouse.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = Mouse.cpp; path = examples/Mouse.cpp; sourceTree = SOURCE_ROOT; };
		20DA242D9A114C168197846B /* reopen.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = reopen.c; path = glfw/tests/reopen.c; sourceTree = SOURCE_ROOT; };
		21862DC97900412E8BB6503A /* fsaa */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = fsaa; sourceTree = BUILT_PRODUCTS_DIR; };
		2343F81F9EAA44DFA736C4DD /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		25612924124A411185C7E52F /* cocoa_gamma.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = cocoa_gamma.c; path = glfw/src/cocoa_gamma.c; sourceTree = SOURCE_ROOT; };
		256D05218A4545D69E6C6461 /* TriangleColorBuffer.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = TriangleColorBuffer.cpp; path = examples/TriangleColorBuffer.cpp; sourceTree = SOURCE_ROOT; };
		2593FE3070D8400C8E6B5CEE /* GLFWApp */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = GLFWApp; sourceTree = BUILT_PRODUCTS_DIR; };
		27C4063F23DB4F60A9877ADC /* ImmediateTriangles */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = ImmediateTriangles; sourceTree = BUILT_PRODUCTS_DIR; };
		2891FAFCEF394868B9A064AD /* cocoa_init.m */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.objc; fileEncoding = 4; name = cocoa_init.m; path = glfw/src/cocoa_init.m; sourceTree = SOURCE_ROOT; };
		28E959E2E52B4EE49DC9907A /* iconify */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = iconify; sourceTree = BUILT_PRODUCTS_DIR; };
		29040CEFC8614D84A47A8FE7 /* getopt.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = getopt.h; path = glfw/deps/getopt.h; sourceTree = SOURCE_ROOT; };
		292241E356614FD3AFB64CF0 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/src/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		2D82B68335AE42C09D7F796E /* Extensions */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = Extensions; sourceTree = BUILT_PRODUCTS_DIR; };
		2E1BC17FD47E4666AA4C759C /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		2E5F5862D1ED4F8880680D85 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		30910260A74E4DC39033F473 /* getopt.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = getopt.c; path = glfw/deps/getopt.c; sourceTree = SOURCE_ROOT; };
		31E6BFFCB11541EFB3339C30 /* threads.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = threads.c; path = glfw/tests/threads.c; sourceTree = SOURCE_ROOT; };
		36366119BD12428A9007447D /* Immediate.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = Immediate.cpp; path = examples/Immediate.cpp; sourceTree = SOURCE_ROOT; };
		3B6BC15117D04B88B64935A6 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		3DFA850F1BE6403487C5C7E2 /* modes.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = modes.c; path = glfw/tests/modes.c; sourceTree = SOURCE_ROOT; };
		3FBDEB0070244F75AAD1CB28 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		427742673F8D41629F93CE73 /* glfw3native.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = glfw3native.h; path = glfw/include/GLFW/glfw3native.h; sourceTree = SOURCE_ROOT; };
		448B1611217E4584A078C1DE /* ModelView */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = ModelView; sourceTree = BUILT_PRODUCTS_DIR; };
		4850DFB694F14B47AB6DEDDD /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		4AA74625640E43F682651792 /* Version.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = Version.cpp; path = examples/Version.cpp; sourceTree = SOURCE_ROOT; };
		4B18E9C5E5584DC3B5550C9F /* LightingAndTexture */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = LightingAndTexture; sourceTree = BUILT_PRODUCTS_DIR; };
		4E1D2483D76E4128AD78C7BA /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		4E4B3D4950A04817A580ACC5 /* glfw_config.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = glfw_config.h; path = xcode/glfw/src/glfw_config.h; sourceTree = SOURCE_ROOT; };
		4F0DE3ADBE60462EAD980C99 /* Lighting.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = Lighting.cpp; path = examples/Lighting.cpp; sourceTree = SOURCE_ROOT; };
		4FCC8228BE654E3F8206C40C /* joysticks */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = joysticks; sourceTree = BUILT_PRODUCTS_DIR; };
		50250682522E4F2CB523F573 /* ModelView.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = ModelView.cpp; path = examples/ModelView.cpp; sourceTree = SOURCE_ROOT; };
		50F50ADD9AB2403B848A7DBF /* getopt.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = getopt.c; path = glfw/deps/getopt.c; sourceTree = SOURCE_ROOT; };
		51DB1D6204ED48FB95D23924 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		54845AC8BC9E4B41A8754C12 /* clipboard */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = clipboard; sourceTree = BUILT_PRODUCTS_DIR; };
		594CED62E60F4F8586ABC65A /* clipboard.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = clipboard.c; path = glfw/tests/clipboard.c; sourceTree = SOURCE_ROOT; };
		5BC2AB1AA17E48FA9323DA44 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		5D4457F801D84145859DFA3E /* events.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = events.c; path = glfw/tests/events.c; sourceTree = SOURCE_ROOT; };
		60A0D31B571649F486FF6E52 /* time.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = time.c; path = glfw/src/time.c; sourceTree = SOURCE_ROOT; };
		61BA80EA69564CC898C6883C /* TextureLoader.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = TextureLoader.cpp; path = examples/TextureLoader.cpp; sourceTree = SOURCE_ROOT; };
		64DCB38B77CB4C70B55D49C2 /* glfw3.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = glfw3.h; path = glfw/include/GLFW/glfw3.h; sourceTree = SOURCE_ROOT; };
		670E5CB8A7024EC5B6A24235 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		68B20A30037846C18D696DC1 /* windows.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = windows.c; path = glfw/tests/windows.c; sourceTree = SOURCE_ROOT; };
		68C6E476EC6A41B4BBDBA631 /* GLFWwindow.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = GLFWwindow.cpp; path = examples/GLFWwindow.cpp; sourceTree = SOURCE_ROOT; };
		696F3F39009E4CEABFC62E18 /* fsaa.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = fsaa.c; path = glfw/tests/fsaa.c; sourceTree = SOURCE_ROOT; };
		69DD8DBEFB864A7DBB37C115 /* peter.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = peter.c; path = glfw/tests/peter.c; sourceTree = SOURCE_ROOT; };
		6A2CF3868E7A4E96BF8DD7D5 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		6B7DAF45F99B4C96B15CE209 /* monitor.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = monitor.c; path = glfw/src/monitor.c; sourceTree = SOURCE_ROOT; };
		6C272149815545AE8AE809D5 /* tinycthread.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = tinycthread.h; path = glfw/deps/tinycthread.h; sourceTree = SOURCE_ROOT; };
		6E64383CE59E4262BBAF44D3 /* modes */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = modes; sourceTree = BUILT_PRODUCTS_DIR; };
		70645AF4436548C7A0BB3413 /* gamma.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = gamma.c; path = glfw/tests/gamma.c; sourceTree = SOURCE_ROOT; };
		721B6D989EA0435C9E246E60 /* TriangleBuffer.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = TriangleBuffer.cpp; path = examples/TriangleBuffer.cpp; sourceTree = SOURCE_ROOT; };
		73229BE1FF414D4194408CBC /* defaults.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = defaults.c; path = glfw/tests/defaults.c; sourceTree = SOURCE_ROOT; };
		75451B9B09EE496C95A0884F /* Mouse */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = Mouse; sourceTree = BUILT_PRODUCTS_DIR; };
		7597D7B466394F0A9DBDDD6B /* Model.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = Model.cpp; path = examples/Model.cpp; sourceTree = SOURCE_ROOT; };
		76EB533DB2FA4EFB919B2387 /* DynamicMesh */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = DynamicMesh; sourceTree = BUILT_PRODUCTS_DIR; };
		7701776C697945AE9B30943F /* Texture.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = Texture.cpp; path = examples/Texture.cpp; sourceTree = SOURCE_ROOT; };
		7DF7F365BD0E46BFAE0375C0 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		83E00C3043DF49F6AB61A4D7 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		843E4223DE2D49C0A39C1BF3 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		86FEEA49E741430E820E76AC /* TriangleColorBuffer */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = TriangleColorBuffer; sourceTree = BUILT_PRODUCTS_DIR; };
		89C9DDEE70A045E4A085FF99 /* getopt.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = getopt.c; path = glfw/deps/getopt.c; sourceTree = SOURCE_ROOT; };
		8B987734F7314B138CA7FF39 /* ImmediateTriangles.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = ImmediateTriangles.cpp; path = examples/ImmediateTriangles.cpp; sourceTree = SOURCE_ROOT; };
		901BF47746054D74A783EE9B /* gamma.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = gamma.c; path = glfw/src/gamma.c; sourceTree = SOURCE_ROOT; };
		9266CD6C1E1B4F7B91C4AE36 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		931C0E59D5BF44AB92367CEC /* sharing.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; path = sharing.app; sourceTree = BUILT_PRODUCTS_DIR; };
		93A92D4E3D25477FBCBD9810 /* tinycthread.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = tinycthread.c; path = glfw/deps/tinycthread.c; sourceTree = SOURCE_ROOT; };
		94FF80EE0CBD4147BA1DAB32 /* Texture */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = Texture; sourceTree = BUILT_PRODUCTS_DIR; };
		95B2F0CF1951485D9A21B3C6 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		9646430E6E804F488852CC93 /* window.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = window.c; path = glfw/src/window.c; sourceTree = SOURCE_ROOT; };
		967F28469C604CD784CB26F9 /* nsgl_platform.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = nsgl_platform.h; path = glfw/src/nsgl_platform.h; sourceTree = SOURCE_ROOT; };
		968D0FA586D84E15A79BEB0A /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		97D8939A135C4D0BAF76705C /* accuracy.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = accuracy.c; path = glfw/tests/accuracy.c; sourceTree = SOURCE_ROOT; };
		9A4F7B1974B541FA94E2A549 /* peter */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = peter; sourceTree = BUILT_PRODUCTS_DIR; };
		9AD0A99E256D4F3D8E6E83CA /* cocoa_window.m */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.objc; fileEncoding = 4; name = cocoa_window.m; path = glfw/src/cocoa_window.m; sourceTree = SOURCE_ROOT; };
		9F047CB89DDB4B84A720F159 /* nsgl_context.m */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.objc; fileEncoding = 4; name = nsgl_context.m; path = glfw/src/nsgl_context.m; sourceTree = SOURCE_ROOT; };
		A06A4BA8AE994148B7047603 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		A2B5477EE65748D1AAFBD7A4 /* init.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = init.c; path = glfw/src/init.c; sourceTree = SOURCE_ROOT; };
		A3439EC5EBB045D29CBB6D88 /* events */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = events; sourceTree = BUILT_PRODUCTS_DIR; };
		A38FC68EB5E1405197A4523C /* LightingAndTexture.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = LightingAndTexture.cpp; path = examples/LightingAndTexture.cpp; sourceTree = SOURCE_ROOT; };
		A60784448C9949E2AE64461B /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		AC33B0A4789744BAACF4C0DE /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		AD34D8DFCC274976B1F8E66A /* defaults */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = defaults; sourceTree = BUILT_PRODUCTS_DIR; };
		ADD72C6DCECF4F5A9EB05449 /* tearing.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; path = tearing.app; sourceTree = BUILT_PRODUCTS_DIR; };
		ADDB97A3595B4E33BC918389 /* windows.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; path = windows.app; sourceTree = BUILT_PRODUCTS_DIR; };
		AE13F29CEF604B9F9E20E1A6 /* Extensions.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = Extensions.cpp; path = examples/Extensions.cpp; sourceTree = SOURCE_ROOT; };
		B147FD19F6B7498FB65C7B4D /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		B1DA185C9DE943E8B6FB2614 /* Model */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = Model; sourceTree = BUILT_PRODUCTS_DIR; };
		B2BC164ED3284B8390DA33CF /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		B32302EFC86448C79D233A9F /* cocoa_monitor.m */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.objc; fileEncoding = 4; name = cocoa_monitor.m; path = glfw/src/cocoa_monitor.m; sourceTree = SOURCE_ROOT; };
		B7038707EB294CC79E250615 /* threads.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; path = threads.app; sourceTree = BUILT_PRODUCTS_DIR; };
		B83361E276CB49FF9E44AC00 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		BDAF111420A04CD5816DFB68 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		BF9FA512F34946B8886E9304 /* Info.plist */ = {isa = PBXFileReference; explicitFileType = sourcecode.text.plist; fileEncoding = 4; lastKnownFileType = text.plist; name = Info.plist; path = xcode/glfw/tests/CMakeFiles/accuracy.dir/Info.plist; sourceTree = SOURCE_ROOT; };
		C311438E65B74228956AEA9A /* getopt.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = getopt.c; path = glfw/deps/getopt.c; sourceTree = SOURCE_ROOT; };
		C3440A32DD2F449B82430DCF /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		C5ADA6F249164C559A2BE67B /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		C6B7129FF25948B8B42A1B58 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		C6C4D3D512EA4C9C97A8BC1E /* title.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = title.c; path = glfw/tests/title.c; sourceTree = SOURCE_ROOT; };
		C8724879C0EE4E4FAC54E728 /* GLFWwindow */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = GLFWwindow; sourceTree = BUILT_PRODUCTS_DIR; };
		C942EACD9D904781966EA783 /* Cube.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = Cube.cpp; path = examples/Cube.cpp; sourceTree = SOURCE_ROOT; };
		C9B86D5DCC6846CEB3EF1819 /* Info.plist */ = {isa = PBXFileReference; explicitFileType = sourcecode.text.plist; fileEncoding = 4; lastKnownFileType = text.plist; name = Info.plist; path = xcode/glfw/tests/CMakeFiles/tearing.dir/Info.plist; sourceTree = SOURCE_ROOT; };
		CA3FC0A2C5A74B40B2DACECF /* getopt.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = getopt.h; path = glfw/deps/getopt.h; sourceTree = SOURCE_ROOT; };
		CB7753F77BA4403892541A36 /* Immediate */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = Immediate; sourceTree = BUILT_PRODUCTS_DIR; };
		CBD41FA22E2040CD8C524FB4 /* Keyboard.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = Keyboard.cpp; path = examples/Keyboard.cpp; sourceTree = SOURCE_ROOT; };
		CDFD4EE8B7104CB8971880FE /* reopen */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = reopen; sourceTree = BUILT_PRODUCTS_DIR; };
		D06F4F767EB44253A489AC9E /* DynamicMesh.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = DynamicMesh.cpp; path = examples/DynamicMesh.cpp; sourceTree = SOURCE_ROOT; };
		D35A6A72083348D7B03DE751 /* getopt.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = getopt.h; path = glfw/deps/getopt.h; sourceTree = SOURCE_ROOT; };
		D4E42C2404374E85A25FA7C3 /* glfwinfo */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = glfwinfo; sourceTree = BUILT_PRODUCTS_DIR; };
		D5E31263595D460B95FED9E4 /* cocoa_time.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = cocoa_time.c; path = glfw/src/cocoa_time.c; sourceTree = SOURCE_ROOT; };
		D8E133FEB7D244439FD18A12 /* Info.plist */ = {isa = PBXFileReference; explicitFileType = sourcecode.text.plist; fileEncoding = 4; lastKnownFileType = text.plist; name = Info.plist; path = xcode/glfw/tests/CMakeFiles/sharing.dir/Info.plist; sourceTree = SOURCE_ROOT; };
		DA6EA3FCABE5426597050ED6 /* sharing.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = sharing.c; path = glfw/tests/sharing.c; sourceTree = SOURCE_ROOT; };
		DA7A57D363684256A010C548 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		DAB1D8CBB624482EADCE2CD7 /* iconify.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = iconify.c; path = glfw/tests/iconify.c; sourceTree = SOURCE_ROOT; };
		DC60C4EEF31540B293210C35 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		DDBC67D1127142DE80207CFC /* getopt.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = getopt.h; path = glfw/deps/getopt.h; sourceTree = SOURCE_ROOT; };
		DE68C6E3AC7C4B4F9EEBD87B /* getopt.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = getopt.h; path = glfw/deps/getopt.h; sourceTree = SOURCE_ROOT; };
		E02D2BAA36F74CFEB5C3127D /* cocoa_joystick.m */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.objc; fileEncoding = 4; name = cocoa_joystick.m; path = glfw/src/cocoa_joystick.m; sourceTree = SOURCE_ROOT; };
		E037D7CE5DD7403B9B583A7C /* GLFWApp.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = GLFWApp.cpp; path = examples/GLFWApp.cpp; sourceTree = SOURCE_ROOT; };
		E0C21BB06BBC4E50BC4E2D17 /* cocoa_platform.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = cocoa_platform.h; path = glfw/src/cocoa_platform.h; sourceTree = SOURCE_ROOT; };
		E7A1A8811BE6404FBD8D0494 /* clipboard.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = clipboard.c; path = glfw/src/clipboard.c; sourceTree = SOURCE_ROOT; };
		E8852B29F8F0414F8DFA487D /* getopt.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = getopt.c; path = glfw/deps/getopt.c; sourceTree = SOURCE_ROOT; };
		EA3CDF840ECF46D79925BA03 /* Cube */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = Cube; sourceTree = BUILT_PRODUCTS_DIR; };
		EEF46C4B717F42989F1A6E97 /* TriangleBuffer */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = TriangleBuffer; sourceTree = BUILT_PRODUCTS_DIR; };
		EF2EBF04EB3A431CA3DD8CDC /* glfwinfo.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = glfwinfo.c; path = glfw/tests/glfwinfo.c; sourceTree = SOURCE_ROOT; };
		F1888962A4FE49448F17AA3A /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		F2A6854AB1BF4032BF84450E /* joystick.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = joystick.c; path = glfw/src/joystick.c; sourceTree = SOURCE_ROOT; };
		F3684D069046475FBD686EDB /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		F4D67EF2867B46819C59900A /* TriangleOrtho */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = TriangleOrtho; sourceTree = BUILT_PRODUCTS_DIR; };
		F61B028CD4F14AA493E3BB5A /* libglfw3.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = libglfw3.a; sourceTree = BUILT_PRODUCTS_DIR; };
		F6A29D9FDAC645EE8DFE28B8 /* joysticks.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = joysticks.c; path = glfw/tests/joysticks.c; sourceTree = SOURCE_ROOT; };
		F830F8E6215741A4821D10A9 /* getopt.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = getopt.c; path = glfw/deps/getopt.c; sourceTree = SOURCE_ROOT; };
		F8AE1D767A76404FB54DE5A2 /* input.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = input.c; path = glfw/src/input.c; sourceTree = SOURCE_ROOT; };
		FA3A9331888B44378C49B672 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		FD43D8DA4FD345B38225DC36 /* title.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; path = title.app; sourceTree = BUILT_PRODUCTS_DIR; };
		FE096F8B25664BB38B057734 /* cocoa_clipboard.m */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.objc; fileEncoding = 4; name = cocoa_clipboard.m; path = glfw/src/cocoa_clipboard.m; sourceTree = SOURCE_ROOT; };
		FE6AD4BA7112466CA7D79F9F /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		FEA7BBCFF1294D0F96425950 /* TriangleOrtho.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = TriangleOrtho.cpp; path = examples/TriangleOrtho.cpp; sourceTree = SOURCE_ROOT; };
		FFBD6E4FE0714CB4883D1EB1 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
/* End PBXFileReference section */

/* Begin PBXGroup section */
		025C71B003F0466BA36BF2DD /* Immediate */ = {
			isa = PBXGroup;
			children = (
				E99B3CD53DE249ADB170E9EF /* Source Files */,
				968D0FA586D84E15A79BEB0A /* CMakeLists.txt */,
			);
			name = Immediate;
			sourceTree = "<group>";
		};
		03A4F8D5DFA7454DB14E618D /* Source Files */ = {
			isa = PBXGroup;
			children = (
				C6C4D3D512EA4C9C97A8BC1E /* title.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		07169235AC164DD5BAA1A27D /* threads */ = {
			isa = PBXGroup;
			children = (
				CE38EAF44053401386B5C3AD /* Source Files */,
				790C7787EF0A49FC962A76F4 /* Header Files */,
				A75381AB8C0245159833AAF1 /* Resources */,
				51DB1D6204ED48FB95D23924 /* CMakeLists.txt */,
			);
			name = threads;
			sourceTree = "<group>";
		};
		09B12BB76A5E444E8DE46B23 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				C942EACD9D904781966EA783 /* Cube.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		0C15805012DB40E3B6306454 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				7701776C697945AE9B30943F /* Texture.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		10361542F156417DBB482271 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				68B20A30037846C18D696DC1 /* windows.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		14D03A4A02C2490D937EED32 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				50250682522E4F2CB523F573 /* ModelView.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1ACAA94A4CDC4B8FA4E46BB5 /* Resources */ = {
			isa = PBXGroup;
			children = (
				06171161D13E4B4CAAAA6D0E /* Info.plist */,
			);
			name = Resources;
			sourceTree = "<group>";
		};
		1E517117D10A49BA831466CF /* glfwinfo */ = {
			isa = PBXGroup;
			children = (
				8680326244D247B287D31765 /* Source Files */,
				7F353ED027EE461EB7BA8B6E /* Header Files */,
				A06A4BA8AE994148B7047603 /* CMakeLists.txt */,
			);
			name = glfwinfo;
			sourceTree = "<group>";
		};
		225BD6AAD45844F6A722B5CD /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		23D2D703A44946B48F7D69E6 /* clipboard */ = {
			isa = PBXGroup;
			children = (
				6BA720DB5B984F82AC5383DF /* Source Files */,
				B2C3A1F70A4D4283B733EE92 /* Header Files */,
				DC60C4EEF31540B293210C35 /* CMakeLists.txt */,
			);
			name = clipboard;
			sourceTree = "<group>";
		};
		26C9F7CFC43248FE9773D7B8 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				F6A29D9FDAC645EE8DFE28B8 /* joysticks.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		29556ABAD45E4C0A93D6AFB6 /* tearing */ = {
			isa = PBXGroup;
			children = (
				C024223761774E39980BCB16 /* Source Files */,
				73CD02EC5CED4712B312A3F9 /* Resources */,
				B2BC164ED3284B8390DA33CF /* CMakeLists.txt */,
			);
			name = tearing;
			sourceTree = "<group>";
		};
		29F1E7A5C71A4009BC16C1FB /* Source Files */ = {
			isa = PBXGroup;
			children = (
				30910260A74E4DC39033F473 /* getopt.c */,
				5D4457F801D84145859DFA3E /* events.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		2A8048FF693C44C484EC99AE /* Source Files */ = {
			isa = PBXGroup;
			children = (
				E7A1A8811BE6404FBD8D0494 /* clipboard.c */,
				FE096F8B25664BB38B057734 /* cocoa_clipboard.m */,
				25612924124A411185C7E52F /* cocoa_gamma.c */,
				2891FAFCEF394868B9A064AD /* cocoa_init.m */,
				E02D2BAA36F74CFEB5C3127D /* cocoa_joystick.m */,
				B32302EFC86448C79D233A9F /* cocoa_monitor.m */,
				D5E31263595D460B95FED9E4 /* cocoa_time.c */,
				9AD0A99E256D4F3D8E6E83CA /* cocoa_window.m */,
				10F3E076EEC74492B19FC155 /* context.c */,
				901BF47746054D74A783EE9B /* gamma.c */,
				A2B5477EE65748D1AAFBD7A4 /* init.c */,
				F8AE1D767A76404FB54DE5A2 /* input.c */,
				F2A6854AB1BF4032BF84450E /* joystick.c */,
				6B7DAF45F99B4C96B15CE209 /* monitor.c */,
				9F047CB89DDB4B84A720F159 /* nsgl_context.m */,
				60A0D31B571649F486FF6E52 /* time.c */,
				9646430E6E804F488852CC93 /* window.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		322A962D03124854A4E4AB1E /* TriangleBuffer */ = {
			isa = PBXGroup;
			children = (
				A64FCCDB9A844A3D86568368 /* Source Files */,
				3FBDEB0070244F75AAD1CB28 /* CMakeLists.txt */,
			);
			name = TriangleBuffer;
			sourceTree = "<group>";
		};
		3ACF8E02777246139321BAFE = {
			isa = PBXGroup;
			children = (
				DDF0F144414448A882A1B513 /* Sources */,
				4C0EF7424B95458A9C081DB2 /* Resources */,
				FFDD96F566F844A5BE0219FE /* Products */,
				0813CF6F1B6B1964005350E8 /* include */,
			);
			sourceTree = "<group>";
		};
		402DFCF5ADE44A37B8CA7B68 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				E037D7CE5DD7403B9B583A7C /* GLFWApp.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		40E90CD2B3524C378BA95D72 /* Mouse */ = {
			isa = PBXGroup;
			children = (
				D937EEC8BE81418FB2FAB5EC /* Source Files */,
				83E00C3043DF49F6AB61A4D7 /* CMakeLists.txt */,
			);
			name = Mouse;
			sourceTree = "<group>";
		};
		42A14AA01F274DE1A305A2AF /* DynamicMesh */ = {
			isa = PBXGroup;
			children = (
				A5E2CB0E596F47BF878579AD /* Source Files */,
				AC33B0A4789744BAACF4C0DE /* CMakeLists.txt */,
			);
			name = DynamicMesh;
			sourceTree = "<group>";
		};
		4666643466BD4F50B3630B21 /* joysticks */ = {
			isa = PBXGroup;
			children = (
				26C9F7CFC43248FE9773D7B8 /* Source Files */,
				95B2F0CF1951485D9A21B3C6 /* CMakeLists.txt */,
			);
			name = joysticks;
			sourceTree = "<group>";
		};
		4751DF94BD8A423891EC4DBA /* windows */ = {
			isa = PBXGroup;
			children = (
				10361542F156417DBB482271 /* Source Files */,
				1ACAA94A4CDC4B8FA4E46BB5 /* Resources */,
				C6B7129FF25948B8B42A1B58 /* CMakeLists.txt */,
			);
			name = windows;
			sourceTree = "<group>";
		};
		48711E6292E4494EB155B193 /* defaults */ = {
			isa = PBXGroup;
			children = (
				8A68AF4B604D4080A6B1DF59 /* Source Files */,
				C5ADA6F249164C559A2BE67B /* CMakeLists.txt */,
			);
			name = defaults;
			sourceTree = "<group>";
		};
		4C0EF7424B95458A9C081DB2 /* Resources */ = {
			isa = PBXGroup;
			children = (
			);
			name = Resources;
			sourceTree = "<group>";
		};
		4C432CBB8DA44FE9B77AA0A2 /* fsaa */ = {
			isa = PBXGroup;
			children = (
				A233F5A11A8F4F39B2053BEF /* Source Files */,
				EBF86205387C44E7B4DED60F /* Header Files */,
				07F0C5C085994659B8EB61F4 /* CMakeLists.txt */,
			);
			name = fsaa;
			sourceTree = "<group>";
		};
		4CD36DF77E8140D8BC1F047B /* Source Files */ = {
			isa = PBXGroup;
			children = (
				20DA242D9A114C168197846B /* reopen.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		4ECACA0CC4C74532999BDD9C /* ZERO_CHECK */ = {
			isa = PBXGroup;
			children = (
				225BD6AAD45844F6A722B5CD /* CMake Rules */,
				059F7E997F6741B186AD2DD8 /* CMakeLists.txt */,
			);
			name = ZERO_CHECK;
			sourceTree = "<group>";
		};
		50E4A98545F144B3BCB4F79A /* Header Files */ = {
			isa = PBXGroup;
			children = (
				D35A6A72083348D7B03DE751 /* getopt.h */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		54C6C999FA064362B48DBAFB /* Source Files */ = {
			isa = PBXGroup;
			children = (
				DA6EA3FCABE5426597050ED6 /* sharing.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		5544707BD8D04F1090A43272 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				69DD8DBEFB864A7DBB37C115 /* peter.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		59E209DC3BBC4F3294AD8627 /* ALL_BUILD */ = {
			isa = PBXGroup;
			children = (
				F3C7BF776E2E4808B605EB53 /* CMake Rules */,
				FA3A9331888B44378C49B672 /* CMakeLists.txt */,
			);
			name = ALL_BUILD;
			sourceTree = "<group>";
		};
		5C92A30519944F47B8637A9B /* ImmediateTriangles */ = {
			isa = PBXGroup;
			children = (
				EA8B67AC558D4C4088F71D80 /* Source Files */,
				2E5F5862D1ED4F8880680D85 /* CMakeLists.txt */,
			);
			name = ImmediateTriangles;
			sourceTree = "<group>";
		};
		616E128851C344888120835B /* Source Files */ = {
			isa = PBXGroup;
			children = (
				256D05218A4545D69E6C6461 /* TriangleColorBuffer.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		624E046EA2B24F0BAEF6D06B /* Header Files */ = {
			isa = PBXGroup;
			children = (
				DDBC67D1127142DE80207CFC /* getopt.h */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		6406F108C7EF4147B4ED3085 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				E8852B29F8F0414F8DFA487D /* getopt.c */,
				DAB1D8CBB624482EADCE2CD7 /* iconify.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		693548559FCD465CA7D72F6B /* Resources */ = {
			isa = PBXGroup;
			children = (
				D8E133FEB7D244439FD18A12 /* Info.plist */,
			);
			name = Resources;
			sourceTree = "<group>";
		};
		6BA720DB5B984F82AC5383DF /* Source Files */ = {
			isa = PBXGroup;
			children = (
				F830F8E6215741A4821D10A9 /* getopt.c */,
				594CED62E60F4F8586ABC65A /* clipboard.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		6FE755CFB0D241138F66C1DC /* Header Files */ = {
			isa = PBXGroup;
			children = (
				29040CEFC8614D84A47A8FE7 /* getopt.h */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		7046BAD3DFCE46318144EF99 /* uninstall */ = {
			isa = PBXGroup;
			children = (
				92C143D4641740EC91DE7DB2 /* CMake Rules */,
				2E1BC17FD47E4666AA4C759C /* CMakeLists.txt */,
			);
			name = uninstall;
			sourceTree = "<group>";
		};
		72E24B43EB9542DB9114617E /* GLFWApp */ = {
			isa = PBXGroup;
			children = (
				402DFCF5ADE44A37B8CA7B68 /* Source Files */,
				843E4223DE2D49C0A39C1BF3 /* CMakeLists.txt */,
			);
			name = GLFWApp;
			sourceTree = "<group>";
		};
		732FEEA03EF340A297CBA952 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				61BA80EA69564CC898C6883C /* TextureLoader.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		73CD02EC5CED4712B312A3F9 /* Resources */ = {
			isa = PBXGroup;
			children = (
				C9B86D5DCC6846CEB3EF1819 /* Info.plist */,
			);
			name = Resources;
			sourceTree = "<group>";
		};
		754195DFE71547F4A61508F8 /* TriangleColorBuffer */ = {
			isa = PBXGroup;
			children = (
				616E128851C344888120835B /* Source Files */,
				7DF7F365BD0E46BFAE0375C0 /* CMakeLists.txt */,
			);
			name = TriangleColorBuffer;
			sourceTree = "<group>";
		};
		77599859120545828D7AE72E /* Header Files */ = {
			isa = PBXGroup;
			children = (
				64DCB38B77CB4C70B55D49C2 /* glfw3.h */,
				427742673F8D41629F93CE73 /* glfw3native.h */,
				E0C21BB06BBC4E50BC4E2D17 /* cocoa_platform.h */,
				1DB7A2ACDAB34C8BB51B5B62 /* internal.h */,
				967F28469C604CD784CB26F9 /* nsgl_platform.h */,
				4E4B3D4950A04817A580ACC5 /* glfw_config.h */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		790C7787EF0A49FC962A76F4 /* Header Files */ = {
			isa = PBXGroup;
			children = (
				6C272149815545AE8AE809D5 /* tinycthread.h */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		7A34352DB7D24CDF8612DC6F /* Source Files */ = {
			isa = PBXGroup;
			children = (
				4AA74625640E43F682651792 /* Version.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		7ABA681066994BD29A22EAC5 /* Resources */ = {
			isa = PBXGroup;
			children = (
				1118C60B624C4D6EBD596AA4 /* Info.plist */,
			);
			name = Resources;
			sourceTree = "<group>";
		};
		7DB53B70C2EA4DD0B8BD56FF /* Source Files */ = {
			isa = PBXGroup;
			children = (
				FEA7BBCFF1294D0F96425950 /* TriangleOrtho.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		7F353ED027EE461EB7BA8B6E /* Header Files */ = {
			isa = PBXGroup;
			children = (
				DE68C6E3AC7C4B4F9EEBD87B /* getopt.h */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		7FB3AB7ECB304233ACB2E9BE /* GLFWwindow */ = {
			isa = PBXGroup;
			children = (
				9A1F798E2801443F8B699A31 /* Source Files */,
				9266CD6C1E1B4F7B91C4AE36 /* CMakeLists.txt */,
			);
			name = GLFWwindow;
			sourceTree = "<group>";
		};
		80F8565916FE4DCE8F5B69F5 /* accuracy */ = {
			isa = PBXGroup;
			children = (
				846CC0C369DD4761AFBB4DB6 /* Source Files */,
				BD55CEB1397746BF9D88EF4F /* Resources */,
				11451BF8E67E495EA2B13320 /* CMakeLists.txt */,
			);
			name = accuracy;
			sourceTree = "<group>";
		};
		82285E4D1A264298BF85E099 /* Texture */ = {
			isa = PBXGroup;
			children = (
				0C15805012DB40E3B6306454 /* Source Files */,
				4850DFB694F14B47AB6DEDDD /* CMakeLists.txt */,
			);
			name = Texture;
			sourceTree = "<group>";
		};
		846CC0C369DD4761AFBB4DB6 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				97D8939A135C4D0BAF76705C /* accuracy.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		8680326244D247B287D31765 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				C311438E65B74228956AEA9A /* getopt.c */,
				EF2EBF04EB3A431CA3DD8CDC /* glfwinfo.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		8A68AF4B604D4080A6B1DF59 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				73229BE1FF414D4194408CBC /* defaults.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		8AD1398245404BA5A2D5EF43 /* iconify */ = {
			isa = PBXGroup;
			children = (
				6406F108C7EF4147B4ED3085 /* Source Files */,
				624E046EA2B24F0BAEF6D06B /* Header Files */,
				670E5CB8A7024EC5B6A24235 /* CMakeLists.txt */,
			);
			name = iconify;
			sourceTree = "<group>";
		};
		8D59373482E54FF0B517F9EF /* reopen */ = {
			isa = PBXGroup;
			children = (
				4CD36DF77E8140D8BC1F047B /* Source Files */,
				A60784448C9949E2AE64461B /* CMakeLists.txt */,
			);
			name = reopen;
			sourceTree = "<group>";
		};
		91160AEEF77F41208E96D1B6 /* glfw */ = {
			isa = PBXGroup;
			children = (
				2A8048FF693C44C484EC99AE /* Source Files */,
				77599859120545828D7AE72E /* Header Files */,
				292241E356614FD3AFB64CF0 /* CMakeLists.txt */,
			);
			name = glfw;
			sourceTree = "<group>";
		};
		92C143D4641740EC91DE7DB2 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		93C2A08A1A3840B4932003A9 /* title */ = {
			isa = PBXGroup;
			children = (
				03A4F8D5DFA7454DB14E618D /* Source Files */,
				7ABA681066994BD29A22EAC5 /* Resources */,
				DA7A57D363684256A010C548 /* CMakeLists.txt */,
			);
			name = title;
			sourceTree = "<group>";
		};
		97EB97CF27B346B694BFBF18 /* Version */ = {
			isa = PBXGroup;
			children = (
				7A34352DB7D24CDF8612DC6F /* Source Files */,
				1D3FA608680A40D793E9AC30 /* CMakeLists.txt */,
			);
			name = Version;
			sourceTree = "<group>";
		};
		9A1F798E2801443F8B699A31 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				68C6E476EC6A41B4BBDBA631 /* GLFWwindow.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		9FC6A4830D9A485B86F25E72 /* Cube */ = {
			isa = PBXGroup;
			children = (
				09B12BB76A5E444E8DE46B23 /* Source Files */,
				FFBD6E4FE0714CB4883D1EB1 /* CMakeLists.txt */,
			);
			name = Cube;
			sourceTree = "<group>";
		};
		9FE035DB13784376938AEFDB /* gamma */ = {
			isa = PBXGroup;
			children = (
				AC11B69EAD5E41D7A601AB33 /* Source Files */,
				6FE755CFB0D241138F66C1DC /* Header Files */,
				4E1D2483D76E4128AD78C7BA /* CMakeLists.txt */,
			);
			name = gamma;
			sourceTree = "<group>";
		};
		A01ED75EAC2A4B93A994CA78 /* TriangleOrtho */ = {
			isa = PBXGroup;
			children = (
				7DB53B70C2EA4DD0B8BD56FF /* Source Files */,
				B147FD19F6B7498FB65C7B4D /* CMakeLists.txt */,
			);
			name = TriangleOrtho;
			sourceTree = "<group>";
		};
		A233F5A11A8F4F39B2053BEF /* Source Files */ = {
			isa = PBXGroup;
			children = (
				89C9DDEE70A045E4A085FF99 /* getopt.c */,
				696F3F39009E4CEABFC62E18 /* fsaa.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		A3F3E2603A664CDFB3FB565B /* events */ = {
			isa = PBXGroup;
			children = (
				29F1E7A5C71A4009BC16C1FB /* Source Files */,
				50E4A98545F144B3BCB4F79A /* Header Files */,
				F3684D069046475FBD686EDB /* CMakeLists.txt */,
			);
			name = events;
			sourceTree = "<group>";
		};
		A5E2CB0E596F47BF878579AD /* Source Files */ = {
			isa = PBXGroup;
			children = (
				D06F4F767EB44253A489AC9E /* DynamicMesh.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		A64FCCDB9A844A3D86568368 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				721B6D989EA0435C9E246E60 /* TriangleBuffer.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		A75381AB8C0245159833AAF1 /* Resources */ = {
			isa = PBXGroup;
			children = (
				18EFC838171E4AF491A98A74 /* Info.plist */,
			);
			name = Resources;
			sourceTree = "<group>";
		};
		A8D0654240894A47A777CC21 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				AE13F29CEF604B9F9E20E1A6 /* Extensions.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		AC11B69EAD5E41D7A601AB33 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				50F50ADD9AB2403B848A7DBF /* getopt.c */,
				70645AF4436548C7A0BB3413 /* gamma.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		AE5FF2BB40314F03924B8DCF /* modes */ = {
			isa = PBXGroup;
			children = (
				D2512B0247F64D5A9F0AD9B5 /* Source Files */,
				DA8F6C7CA4434E698303F8B4 /* Header Files */,
				2343F81F9EAA44DFA736C4DD /* CMakeLists.txt */,
			);
			name = modes;
			sourceTree = "<group>";
		};
		B0E07EC847854E20B67D80FF /* sharing */ = {
			isa = PBXGroup;
			children = (
				54C6C999FA064362B48DBAFB /* Source Files */,
				693548559FCD465CA7D72F6B /* Resources */,
				B83361E276CB49FF9E44AC00 /* CMakeLists.txt */,
			);
			name = sharing;
			sourceTree = "<group>";
		};
		B2750B334A81419A881156FC /* Source Files */ = {
			isa = PBXGroup;
			children = (
				A38FC68EB5E1405197A4523C /* LightingAndTexture.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		B2C3A1F70A4D4283B733EE92 /* Header Files */ = {
			isa = PBXGroup;
			children = (
				004AC42AAE214FDF878B70F9 /* getopt.h */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		B7B6DFC9AD394963B9E3C053 /* TextureLoader */ = {
			isa = PBXGroup;
			children = (
				732FEEA03EF340A297CBA952 /* Source Files */,
				3B6BC15117D04B88B64935A6 /* CMakeLists.txt */,
			);
			name = TextureLoader;
			sourceTree = "<group>";
		};
		BD55CEB1397746BF9D88EF4F /* Resources */ = {
			isa = PBXGroup;
			children = (
				BF9FA512F34946B8886E9304 /* Info.plist */,
			);
			name = Resources;
			sourceTree = "<group>";
		};
		C024223761774E39980BCB16 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				040B43D26AAD4CF1B5935425 /* tearing.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		C6B66BF646914AC9A9A79D70 /* Keyboard */ = {
			isa = PBXGroup;
			children = (
				F74DE6035D964FB6A8FAEFBA /* Source Files */,
				FE6AD4BA7112466CA7D79F9F /* CMakeLists.txt */,
			);
			name = Keyboard;
			sourceTree = "<group>";
		};
		CE38EAF44053401386B5C3AD /* Source Files */ = {
			isa = PBXGroup;
			children = (
				93A92D4E3D25477FBCBD9810 /* tinycthread.c */,
				31E6BFFCB11541EFB3339C30 /* threads.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		CEDAC7CD5DD44986AB0C740C /* LightingAndTexture */ = {
			isa = PBXGroup;
			children = (
				B2750B334A81419A881156FC /* Source Files */,
				5BC2AB1AA17E48FA9323DA44 /* CMakeLists.txt */,
			);
			name = LightingAndTexture;
			sourceTree = "<group>";
		};
		D1F0B49AE4EF496C9FC9F6E0 /* Model */ = {
			isa = PBXGroup;
			children = (
				DE260463184F4E8C89C629DA /* Source Files */,
				C3440A32DD2F449B82430DCF /* CMakeLists.txt */,
			);
			name = Model;
			sourceTree = "<group>";
		};
		D2512B0247F64D5A9F0AD9B5 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				03F273576D084EE48B8197DC /* getopt.c */,
				3DFA850F1BE6403487C5C7E2 /* modes.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		D3095018C7D74164B425DB56 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				4F0DE3ADBE60462EAD980C99 /* Lighting.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		D5A9685303FA4B579B63BD2C /* Lighting */ = {
			isa = PBXGroup;
			children = (
				D3095018C7D74164B425DB56 /* Source Files */,
				BDAF111420A04CD5816DFB68 /* CMakeLists.txt */,
			);
			name = Lighting;
			sourceTree = "<group>";
		};
		D937EEC8BE81418FB2FAB5EC /* Source Files */ = {
			isa = PBXGroup;
			children = (
				1F899CE34597487C8E2A9E91 /* Mouse.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		DA8F6C7CA4434E698303F8B4 /* Header Files */ = {
			isa = PBXGroup;
			children = (
				1C2BAF077B0544AB9345535E /* getopt.h */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		DDF0F144414448A882A1B513 /* Sources */ = {
			isa = PBXGroup;
			children = (
				4ECACA0CC4C74532999BDD9C /* ZERO_CHECK */,
				59E209DC3BBC4F3294AD8627 /* ALL_BUILD */,
				B7B6DFC9AD394963B9E3C053 /* TextureLoader */,
				82285E4D1A264298BF85E099 /* Texture */,
				40E90CD2B3524C378BA95D72 /* Mouse */,
				E7B1EFB73AEC4DBC80D68A93 /* ModelView */,
				322A962D03124854A4E4AB1E /* TriangleBuffer */,
				D1F0B49AE4EF496C9FC9F6E0 /* Model */,
				A01ED75EAC2A4B93A994CA78 /* TriangleOrtho */,
				72E24B43EB9542DB9114617E /* GLFWApp */,
				025C71B003F0466BA36BF2DD /* Immediate */,
				CEDAC7CD5DD44986AB0C740C /* LightingAndTexture */,
				754195DFE71547F4A61508F8 /* TriangleColorBuffer */,
				9FC6A4830D9A485B86F25E72 /* Cube */,
				D5A9685303FA4B579B63BD2C /* Lighting */,
				97EB97CF27B346B694BFBF18 /* Version */,
				C6B66BF646914AC9A9A79D70 /* Keyboard */,
				5C92A30519944F47B8637A9B /* ImmediateTriangles */,
				EB0D264E39B34BD8B57F860D /* Extensions */,
				7FB3AB7ECB304233ACB2E9BE /* GLFWwindow */,
				42A14AA01F274DE1A305A2AF /* DynamicMesh */,
				7046BAD3DFCE46318144EF99 /* uninstall */,
				91160AEEF77F41208E96D1B6 /* glfw */,
				4751DF94BD8A423891EC4DBA /* windows */,
				93C2A08A1A3840B4932003A9 /* title */,
				07169235AC164DD5BAA1A27D /* threads */,
				29556ABAD45E4C0A93D6AFB6 /* tearing */,
				B0E07EC847854E20B67D80FF /* sharing */,
				E7D0C88A88914339932A42A4 /* peter */,
				1E517117D10A49BA831466CF /* glfwinfo */,
				8D59373482E54FF0B517F9EF /* reopen */,
				23D2D703A44946B48F7D69E6 /* clipboard */,
				AE5FF2BB40314F03924B8DCF /* modes */,
				4666643466BD4F50B3630B21 /* joysticks */,
				A3F3E2603A664CDFB3FB565B /* events */,
				8AD1398245404BA5A2D5EF43 /* iconify */,
				80F8565916FE4DCE8F5B69F5 /* accuracy */,
				9FE035DB13784376938AEFDB /* gamma */,
				4C432CBB8DA44FE9B77AA0A2 /* fsaa */,
				48711E6292E4494EB155B193 /* defaults */,
			);
			name = Sources;
			sourceTree = "<group>";
		};
		DE260463184F4E8C89C629DA /* Source Files */ = {
			isa = PBXGroup;
			children = (
				7597D7B466394F0A9DBDDD6B /* Model.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		E7B1EFB73AEC4DBC80D68A93 /* ModelView */ = {
			isa = PBXGroup;
			children = (
				14D03A4A02C2490D937EED32 /* Source Files */,
				F1888962A4FE49448F17AA3A /* CMakeLists.txt */,
			);
			name = ModelView;
			sourceTree = "<group>";
		};
		E7D0C88A88914339932A42A4 /* peter */ = {
			isa = PBXGroup;
			children = (
				5544707BD8D04F1090A43272 /* Source Files */,
				6A2CF3868E7A4E96BF8DD7D5 /* CMakeLists.txt */,
			);
			name = peter;
			sourceTree = "<group>";
		};
		E99B3CD53DE249ADB170E9EF /* Source Files */ = {
			isa = PBXGroup;
			children = (
				36366119BD12428A9007447D /* Immediate.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		EA8B67AC558D4C4088F71D80 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				8B987734F7314B138CA7FF39 /* ImmediateTriangles.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		EB0D264E39B34BD8B57F860D /* Extensions */ = {
			isa = PBXGroup;
			children = (
				A8D0654240894A47A777CC21 /* Source Files */,
				132106F807D34D40B7583969 /* CMakeLists.txt */,
			);
			name = Extensions;
			sourceTree = "<group>";
		};
		EBF86205387C44E7B4DED60F /* Header Files */ = {
			isa = PBXGroup;
			children = (
				CA3FC0A2C5A74B40B2DACECF /* getopt.h */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		F3C7BF776E2E4808B605EB53 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		F74DE6035D964FB6A8FAEFBA /* Source Files */ = {
			isa = PBXGroup;
			children = (
				CBD41FA22E2040CD8C524FB4 /* Keyboard.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		FFDD96F566F844A5BE0219FE /* Products */ = {
			isa = PBXGroup;
			children = (
				EA3CDF840ECF46D79925BA03 /* Cube */,
				76EB533DB2FA4EFB919B2387 /* DynamicMesh */,
				2D82B68335AE42C09D7F796E /* Extensions */,
				2593FE3070D8400C8E6B5CEE /* GLFWApp */,
				C8724879C0EE4E4FAC54E728 /* GLFWwindow */,
				CB7753F77BA4403892541A36 /* Immediate */,
				27C4063F23DB4F60A9877ADC /* ImmediateTriangles */,
				04C1825E12B241799F50FC48 /* Keyboard */,
				1515F078E0DD43CEA9C9AD92 /* Lighting */,
				4B18E9C5E5584DC3B5550C9F /* LightingAndTexture */,
				B1DA185C9DE943E8B6FB2614 /* Model */,
				448B1611217E4584A078C1DE /* ModelView */,
				75451B9B09EE496C95A0884F /* Mouse */,
				94FF80EE0CBD4147BA1DAB32 /* Texture */,
				0A485734ACD4437897751B27 /* TextureLoader */,
				EEF46C4B717F42989F1A6E97 /* TriangleBuffer */,
				86FEEA49E741430E820E76AC /* TriangleColorBuffer */,
				F4D67EF2867B46819C59900A /* TriangleOrtho */,
				195BECBAFFC14448982AB7AA /* Version */,
				F61B028CD4F14AA493E3BB5A /* libglfw3.a */,
				18B35DBFD3BA4FD8B4AA4692 /* accuracy.app */,
				54845AC8BC9E4B41A8754C12 /* clipboard */,
				AD34D8DFCC274976B1F8E66A /* defaults */,
				A3439EC5EBB045D29CBB6D88 /* events */,
				21862DC97900412E8BB6503A /* fsaa */,
				07D7F872242845479B2093DB /* gamma */,
				D4E42C2404374E85A25FA7C3 /* glfwinfo */,
				28E959E2E52B4EE49DC9907A /* iconify */,
				4FCC8228BE654E3F8206C40C /* joysticks */,
				6E64383CE59E4262BBAF44D3 /* modes */,
				9A4F7B1974B541FA94E2A549 /* peter */,
				CDFD4EE8B7104CB8971880FE /* reopen */,
				931C0E59D5BF44AB92367CEC /* sharing.app */,
				ADD72C6DCECF4F5A9EB05449 /* tearing.app */,
				B7038707EB294CC79E250615 /* threads.app */,
				FD43D8DA4FD345B38225DC36 /* title.app */,
				ADDB97A3595B4E33BC918389 /* windows.app */,
			);
			name = Products;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		058B7724999243C3863A1ACE /* ImmediateTriangles */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 1D9EAC96BD534FDD85A8543D /* Build configuration list for PBXNativeTarget "ImmediateTriangles" */;
			buildPhases = (
				F958765BEF454EDEBD9F6A39 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				5CECE787A7244E4FB59ACDF8 /* PBXTargetDependency */,
				5805EF3E062F48AEB8D1B329 /* PBXTargetDependency */,
			);
			name = ImmediateTriangles;
			productName = ImmediateTriangles;
			productReference = 27C4063F23DB4F60A9877ADC /* ImmediateTriangles */;
			productType = "com.apple.product-type.tool";
		};
		05AFCAE5FB794CB282804023 /* glfwinfo */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = B95C68F9637B42459232E033 /* Build configuration list for PBXNativeTarget "glfwinfo" */;
			buildPhases = (
				6FB16E18F8E44B3999A521CD /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				63D788ACCE9B46B4BC58DA6A /* PBXTargetDependency */,
				8C00A744BADD4AE1BD565017 /* PBXTargetDependency */,
			);
			name = glfwinfo;
			productName = glfwinfo;
			productReference = D4E42C2404374E85A25FA7C3 /* glfwinfo */;
			productType = "com.apple.product-type.tool";
		};
		1171954142374CDB91225F42 /* Version */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 3F6DBBDA9DD64C99A84156C0 /* Build configuration list for PBXNativeTarget "Version" */;
			buildPhases = (
				E62EB3E896C2495791EE44DD /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				8D25C10660A34D63BCD937D5 /* PBXTargetDependency */,
				8E10D2E8469C454EA6F857D8 /* PBXTargetDependency */,
			);
			name = Version;
			productName = Version;
			productReference = 195BECBAFFC14448982AB7AA /* Version */;
			productType = "com.apple.product-type.tool";
		};
		1AFC9FE40C2B4F4D9E7A530C /* reopen */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = FF007A9B78104B52A1019C44 /* Build configuration list for PBXNativeTarget "reopen" */;
			buildPhases = (
				F404C0EBD27B4D518BFA706B /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				D2B6C705D3144E55819FA3F6 /* PBXTargetDependency */,
				0C65B0527A674FEF9349A9B3 /* PBXTargetDependency */,
			);
			name = reopen;
			productName = reopen;
			productReference = CDFD4EE8B7104CB8971880FE /* reopen */;
			productType = "com.apple.product-type.tool";
		};
		20C48D31ACB5463EAC7ABDD0 /* modes */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 54152A26B5684FFF91A50C38 /* Build configuration list for PBXNativeTarget "modes" */;
			buildPhases = (
				E250C89D06D144DBA76C5A32 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				621BD7174D2F4C32BCE8B5F4 /* PBXTargetDependency */,
				AABB74AAF40948C4B38AA81C /* PBXTargetDependency */,
			);
			name = modes;
			productName = modes;
			productReference = 6E64383CE59E4262BBAF44D3 /* modes */;
			productType = "com.apple.product-type.tool";
		};
		2253DB912EC9487897AA9CFB /* fsaa */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 76AA93B7B12948B591FF402D /* Build configuration list for PBXNativeTarget "fsaa" */;
			buildPhases = (
				8ECD87A9D77B4FF892A75B92 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				E3E73D89756E42AEAAF7D5E8 /* PBXTargetDependency */,
				DEAA8B20E349429B896EC929 /* PBXTargetDependency */,
			);
			name = fsaa;
			productName = fsaa;
			productReference = 21862DC97900412E8BB6503A /* fsaa */;
			productType = "com.apple.product-type.tool";
		};
		32616AC0D7064BFCB3560C7A /* tearing */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 29FBEF24BF334E4A82A27C00 /* Build configuration list for PBXNativeTarget "tearing" */;
			buildPhases = (
				E67BEA807E904985B2CC596B /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				147C2CD3D7F1454EA238BC45 /* PBXTargetDependency */,
				55ADAC2844DA48018BE56165 /* PBXTargetDependency */,
			);
			name = tearing;
			productName = tearing;
			productReference = ADD72C6DCECF4F5A9EB05449 /* tearing.app */;
			productType = "com.apple.product-type.application";
		};
		38E4AD2C2FE34AD0850ABE2A /* TriangleColorBuffer */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 6A077C2507F64321851AA2E7 /* Build configuration list for PBXNativeTarget "TriangleColorBuffer" */;
			buildPhases = (
				A5897369A32D43E1B6C858C0 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				2A29224C3D684239A9B0C9B6 /* PBXTargetDependency */,
				7841B4EEFCC146559102BCE5 /* PBXTargetDependency */,
			);
			name = TriangleColorBuffer;
			productName = TriangleColorBuffer;
			productReference = 86FEEA49E741430E820E76AC /* TriangleColorBuffer */;
			productType = "com.apple.product-type.tool";
		};
		3E1A50B68CF14439A664AF6F /* sharing */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = DB07BDDD2D1F4C688144CD8C /* Build configuration list for PBXNativeTarget "sharing" */;
			buildPhases = (
				4150BAD4D57F44D88AC5BB5B /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				B388FEC9A0384886A801EDC3 /* PBXTargetDependency */,
				46AF412874A54BAE92B99C96 /* PBXTargetDependency */,
			);
			name = sharing;
			productName = sharing;
			productReference = 931C0E59D5BF44AB92367CEC /* sharing.app */;
			productType = "com.apple.product-type.application";
		};
		40547C360BB3497EA6E961D1 /* joysticks */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2D2BF88F25344F1783459526 /* Build configuration list for PBXNativeTarget "joysticks" */;
			buildPhases = (
				265F152F68C34339A0E32BD4 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				38BDECECBFBF41EE94B212C2 /* PBXTargetDependency */,
				AF0E235A49354D2DA9024474 /* PBXTargetDependency */,
			);
			name = joysticks;
			productName = joysticks;
			productReference = 4FCC8228BE654E3F8206C40C /* joysticks */;
			productType = "com.apple.product-type.tool";
		};
		40CFB08D3B9E4A1EA252DDF2 /* Cube */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = D52E8403E14141D99F6F9558 /* Build configuration list for PBXNativeTarget "Cube" */;
			buildPhases = (
				AF4CCA251BBE45CD915E6050 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				78516D628E774868B901F458 /* PBXTargetDependency */,
				5CDD04F8E18B4AF69E8AF281 /* PBXTargetDependency */,
			);
			name = Cube;
			productName = Cube;
			productReference = EA3CDF840ECF46D79925BA03 /* Cube */;
			productType = "com.apple.product-type.tool";
		};
		52599A59C87244E9820B3355 /* Mouse */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 885A49B560B3411D81A9359E /* Build configuration list for PBXNativeTarget "Mouse" */;
			buildPhases = (
				31BF4B3B69B54605B457BD38 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				23FDF6DCA7A9419BA7A28EA5 /* PBXTargetDependency */,
				296030F6F24545A0848E644D /* PBXTargetDependency */,
			);
			name = Mouse;
			productName = Mouse;
			productReference = 75451B9B09EE496C95A0884F /* Mouse */;
			productType = "com.apple.product-type.tool";
		};
		528194E3821740958EF2CE75 /* GLFWwindow */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = CA45272E33C649F09513B7E0 /* Build configuration list for PBXNativeTarget "GLFWwindow" */;
			buildPhases = (
				FCA211AAF0274FBCADF8FF8A /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				C4EE77688EB24197B508036D /* PBXTargetDependency */,
				9D3152487C4B46D89244DE5E /* PBXTargetDependency */,
			);
			name = GLFWwindow;
			productName = GLFWwindow;
			productReference = C8724879C0EE4E4FAC54E728 /* GLFWwindow */;
			productType = "com.apple.product-type.tool";
		};
		5E81D121A98141FCA96D94EF /* ModelView */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 7028E8CC8866444F9583DD3C /* Build configuration list for PBXNativeTarget "ModelView" */;
			buildPhases = (
				D5DDEBE38E4A4D57A27C81B7 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				6D91E59F51D94370908ACCEB /* PBXTargetDependency */,
				74F66E12B4D146A49D139D25 /* PBXTargetDependency */,
			);
			name = ModelView;
			productName = ModelView;
			productReference = 448B1611217E4584A078C1DE /* ModelView */;
			productType = "com.apple.product-type.tool";
		};
		61DCA32A67B741CCAF109782 /* title */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 908109C8856F4EBDB84BB5C6 /* Build configuration list for PBXNativeTarget "title" */;
			buildPhases = (
				8BF6A020DD7C4CE6BFAE9B77 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				0F51BAA97E9B431F93E2139B /* PBXTargetDependency */,
				B00D66C34AEB48F2AD9CC9F6 /* PBXTargetDependency */,
			);
			name = title;
			productName = title;
			productReference = FD43D8DA4FD345B38225DC36 /* title.app */;
			productType = "com.apple.product-type.application";
		};
		63628BEB206C49AC8216E3FA /* Texture */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 4F485468871246B48E9B2379 /* Build configuration list for PBXNativeTarget "Texture" */;
			buildPhases = (
				A6DB710C59054ABEA647C0DE /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				8851EB490B38478F89B0990E /* PBXTargetDependency */,
				1885B26BE5F3444D8857FCA3 /* PBXTargetDependency */,
			);
			name = Texture;
			productName = Texture;
			productReference = 94FF80EE0CBD4147BA1DAB32 /* Texture */;
			productType = "com.apple.product-type.tool";
		};
		6D0265E4A3E142FD8ED12B4C /* TextureLoader */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 5F6F666FD8124FA384FC5AD7 /* Build configuration list for PBXNativeTarget "TextureLoader" */;
			buildPhases = (
				061AD0C3B66949B5A72FB4FA /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				A258B895EE614240B0043E53 /* PBXTargetDependency */,
				CBCC3418B2074CA79BF75BE9 /* PBXTargetDependency */,
			);
			name = TextureLoader;
			productName = TextureLoader;
			productReference = 0A485734ACD4437897751B27 /* TextureLoader */;
			productType = "com.apple.product-type.tool";
		};
		6F6EED88B3DB425A9D61F6D3 /* Extensions */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 721BC4FF0BBA46849BA9F51C /* Build configuration list for PBXNativeTarget "Extensions" */;
			buildPhases = (
				FC6D368D0D0B4E818E6997FF /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				2DC38C371B9046AC845BF7EE /* PBXTargetDependency */,
				7C3CB6DA7D594B35A5AA2160 /* PBXTargetDependency */,
			);
			name = Extensions;
			productName = Extensions;
			productReference = 2D82B68335AE42C09D7F796E /* Extensions */;
			productType = "com.apple.product-type.tool";
		};
		81ABEEC914CB44EDA5A5B108 /* iconify */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 569D183B33394E658E5F6863 /* Build configuration list for PBXNativeTarget "iconify" */;
			buildPhases = (
				D86ED5C9C52E410988BB91F3 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				844200E03A0C48CE989CC06B /* PBXTargetDependency */,
				D72B268F84884296A272A680 /* PBXTargetDependency */,
			);
			name = iconify;
			productName = iconify;
			productReference = 28E959E2E52B4EE49DC9907A /* iconify */;
			productType = "com.apple.product-type.tool";
		};
		81DA1925DC1140D1917E0421 /* events */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 577AC4C4039B4001BCB76395 /* Build configuration list for PBXNativeTarget "events" */;
			buildPhases = (
				3D9C5FA39D904A819CF497B8 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				72DF0A1108ED43559F6C4E8B /* PBXTargetDependency */,
				6B36A0A723784926B646B4DD /* PBXTargetDependency */,
			);
			name = events;
			productName = events;
			productReference = A3439EC5EBB045D29CBB6D88 /* events */;
			productType = "com.apple.product-type.tool";
		};
		A0906934A4E24847B4AA7395 /* Lighting */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 45A8742B7B6B47D6B2B808A9 /* Build configuration list for PBXNativeTarget "Lighting" */;
			buildPhases = (
				5616DB5CDD244D7DAA0F3536 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				2C2A1E618C45432D9D360686 /* PBXTargetDependency */,
				38B1AE60C4C2497195ADEB90 /* PBXTargetDependency */,
			);
			name = Lighting;
			productName = Lighting;
			productReference = 1515F078E0DD43CEA9C9AD92 /* Lighting */;
			productType = "com.apple.product-type.tool";
		};
		B725607715F44C7AB20FC473 /* TriangleBuffer */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 6B9B7AA460AF4FA5A6CC8C4F /* Build configuration list for PBXNativeTarget "TriangleBuffer" */;
			buildPhases = (
				7A8903F23EB74102ADCF78E0 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				4D9203F0AAEB48A5BB75C8A2 /* PBXTargetDependency */,
				7BE44F9C2D7F478486D72545 /* PBXTargetDependency */,
			);
			name = TriangleBuffer;
			productName = TriangleBuffer;
			productReference = EEF46C4B717F42989F1A6E97 /* TriangleBuffer */;
			productType = "com.apple.product-type.tool";
		};
		B89E2379902E484EA404EEC7 /* windows */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = CE89069F3EED4635B399F5BB /* Build configuration list for PBXNativeTarget "windows" */;
			buildPhases = (
				C420973EBFE24CFBA2C0C2DB /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				A07D871B287648499B31848F /* PBXTargetDependency */,
				48A0E66693644D8C977A2F97 /* PBXTargetDependency */,
			);
			name = windows;
			productName = windows;
			productReference = ADDB97A3595B4E33BC918389 /* windows.app */;
			productType = "com.apple.product-type.application";
		};
		B8F90B86B4744756A9857A68 /* GLFWApp */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = B78DBEB2CD96419BBD192388 /* Build configuration list for PBXNativeTarget "GLFWApp" */;
			buildPhases = (
				0A11258459BF46E696D84818 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				57241AB4A6FB45B4A15532FE /* PBXTargetDependency */,
				F91F3027786C40C192346995 /* PBXTargetDependency */,
			);
			name = GLFWApp;
			productName = GLFWApp;
			productReference = 2593FE3070D8400C8E6B5CEE /* GLFWApp */;
			productType = "com.apple.product-type.tool";
		};
		C15DCEF08B994A88A46BDADC /* Immediate */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 1D7E9C82FB144E1D969EACB2 /* Build configuration list for PBXNativeTarget "Immediate" */;
			buildPhases = (
				F98E0C990ED54187A12088A3 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				9B403DD58877424D8486A5F5 /* PBXTargetDependency */,
				1AC6BACE061E47629C7D98F9 /* PBXTargetDependency */,
			);
			name = Immediate;
			productName = Immediate;
			productReference = CB7753F77BA4403892541A36 /* Immediate */;
			productType = "com.apple.product-type.tool";
		};
		C2D3744568E14F0EB635740A /* defaults */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = FF4CFDAC9C8A452CBE4B563E /* Build configuration list for PBXNativeTarget "defaults" */;
			buildPhases = (
				D9012C2180F344DF8B20B7CB /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				C9E6A2BC3E6E48FD93BB9281 /* PBXTargetDependency */,
				31E6E515994646AFBDDA2A60 /* PBXTargetDependency */,
			);
			name = defaults;
			productName = defaults;
			productReference = AD34D8DFCC274976B1F8E66A /* defaults */;
			productType = "com.apple.product-type.tool";
		};
		CB4C2987E7DE44DEA78E6502 /* peter */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2F19E4C35584470199B862A6 /* Build configuration list for PBXNativeTarget "peter" */;
			buildPhases = (
				B5FCD84FFFBF4E1388FBA7C0 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				5D670DFD37454758ABD804AE /* PBXTargetDependency */,
				6154BC5D09A14450B0EF1AF0 /* PBXTargetDependency */,
			);
			name = peter;
			productName = peter;
			productReference = 9A4F7B1974B541FA94E2A549 /* peter */;
			productType = "com.apple.product-type.tool";
		};
		D55B409F4E15442F9DA1B1FA /* DynamicMesh */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = A0128A74A996447080CA264C /* Build configuration list for PBXNativeTarget "DynamicMesh" */;
			buildPhases = (
				31EAD46223954ECD81F9E957 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				39C2B126EDD8411F988249ED /* PBXTargetDependency */,
				5BD0DE268D8C4581BABF2F21 /* PBXTargetDependency */,
			);
			name = DynamicMesh;
			productName = DynamicMesh;
			productReference = 76EB533DB2FA4EFB919B2387 /* DynamicMesh */;
			productType = "com.apple.product-type.tool";
		};
		D6420C90D62A49F2B3DBB851 /* TriangleOrtho */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = DF5B6E838D014112864F80DF /* Build configuration list for PBXNativeTarget "TriangleOrtho" */;
			buildPhases = (
				29479A8620A94C75AD392AA9 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				90005905DC2F434D87A76183 /* PBXTargetDependency */,
				793C6E252E434A19BCE60A17 /* PBXTargetDependency */,
			);
			name = TriangleOrtho;
			productName = TriangleOrtho;
			productReference = F4D67EF2867B46819C59900A /* TriangleOrtho */;
			productType = "com.apple.product-type.tool";
		};
		D9FE1C1E909748179D6C6F9E /* clipboard */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = B78EA011EC0B4515B5D6A302 /* Build configuration list for PBXNativeTarget "clipboard" */;
			buildPhases = (
				76A85AA9A3B54DE78CD109AA /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				A94811831FAD4EEDBC735E82 /* PBXTargetDependency */,
				2961416B14AE470FA8DD9830 /* PBXTargetDependency */,
			);
			name = clipboard;
			productName = clipboard;
			productReference = 54845AC8BC9E4B41A8754C12 /* clipboard */;
			productType = "com.apple.product-type.tool";
		};
		E990B241187D4676AFE3196C /* Keyboard */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 0D8E6A99872041EDA2A225EB /* Build configuration list for PBXNativeTarget "Keyboard" */;
			buildPhases = (
				E1C3718901234050857FA2A4 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				5EA7A466B5AF4627B51B9C50 /* PBXTargetDependency */,
				DEDA840BDBD64B7DAEDAA2D2 /* PBXTargetDependency */,
			);
			name = Keyboard;
			productName = Keyboard;
			productReference = 04C1825E12B241799F50FC48 /* Keyboard */;
			productType = "com.apple.product-type.tool";
		};
		EB74C5BFB1394C7E87C180FE /* Model */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 0F9EAD9035F44D7EB190FF7C /* Build configuration list for PBXNativeTarget "Model" */;
			buildPhases = (
				D85E69045C08410CAE2DECFA /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				11FD93CB60B64B5EA9FDEBC5 /* PBXTargetDependency */,
				F1F23545F8E04736B626DC19 /* PBXTargetDependency */,
			);
			name = Model;
			productName = Model;
			productReference = B1DA185C9DE943E8B6FB2614 /* Model */;
			productType = "com.apple.product-type.tool";
		};
		EBF2F60860E74912A92C33F3 /* gamma */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 0D440A3A9ACB45729CC9B416 /* Build configuration list for PBXNativeTarget "gamma" */;
			buildPhases = (
				EF8A9244FD9840E0B3837A07 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				7BE0C0B0703A475B9008AFCE /* PBXTargetDependency */,
				A2B1797B30B347A2A678E519 /* PBXTargetDependency */,
			);
			name = gamma;
			productName = gamma;
			productReference = 07D7F872242845479B2093DB /* gamma */;
			productType = "com.apple.product-type.tool";
		};
		EE93707E326E4231B9F1DCAC /* threads */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = E8046E2DC7E54C9393F77492 /* Build configuration list for PBXNativeTarget "threads" */;
			buildPhases = (
				80D56E908D174763AA4F12E4 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				B82D9073E0DD47D6B4549319 /* PBXTargetDependency */,
				5F8C1F019F8743E0AF005C4C /* PBXTargetDependency */,
			);
			name = threads;
			productName = threads;
			productReference = B7038707EB294CC79E250615 /* threads.app */;
			productType = "com.apple.product-type.application";
		};
		EFAF1251E5E04E03851A2167 /* accuracy */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 4D56261E1A854105B1F0D710 /* Build configuration list for PBXNativeTarget "accuracy" */;
			buildPhases = (
				ED5A70789CED4D1681D4DC5B /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				D7643562E9284A1F95654059 /* PBXTargetDependency */,
				1C59DA1336F5436C9CD0D880 /* PBXTargetDependency */,
			);
			name = accuracy;
			productName = accuracy;
			productReference = 18B35DBFD3BA4FD8B4AA4692 /* accuracy.app */;
			productType = "com.apple.product-type.application";
		};
		F068B936183646BC9C2A99A3 /* LightingAndTexture */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = DA6056F5C585470DBCD250EB /* Build configuration list for PBXNativeTarget "LightingAndTexture" */;
			buildPhases = (
				CCD3E0F44194471D8769D206 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				9148BD727228446295B5F720 /* PBXTargetDependency */,
				8EE3C90561514454ADD165AB /* PBXTargetDependency */,
			);
			name = LightingAndTexture;
			productName = LightingAndTexture;
			productReference = 4B18E9C5E5584DC3B5550C9F /* LightingAndTexture */;
			productType = "com.apple.product-type.tool";
		};
		FE80DAA424C34539BCB11065 /* glfw */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2EBF62BE5FC34D9B83F4E533 /* Build configuration list for PBXNativeTarget "glfw" */;
			buildPhases = (
				23E897ACE3DA4947BF4EFB50 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				A269693EE4074851BB733D2F /* PBXTargetDependency */,
			);
			name = glfw;
			productName = glfw;
			productReference = F61B028CD4F14AA493E3BB5A /* libglfw3.a */;
			productType = "com.apple.product-type.library.static";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		26BABEEB8B04403F9FB5B420 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				BuildIndependentTargetsInParallel = YES;
			};
			buildConfigurationList = 3DA71004E467470BB655C528 /* Build configuration list for PBXProject "UaR_OpenGL" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = 3ACF8E02777246139321BAFE;
			projectDirPath = ../;
			projectRoot = "";
			targets = (
				B0F4BF1CD07B49AC9D598B28 /* ALL_BUILD */,
				40CFB08D3B9E4A1EA252DDF2 /* Cube */,
				D55B409F4E15442F9DA1B1FA /* DynamicMesh */,
				6F6EED88B3DB425A9D61F6D3 /* Extensions */,
				B8F90B86B4744756A9857A68 /* GLFWApp */,
				528194E3821740958EF2CE75 /* GLFWwindow */,
				C15DCEF08B994A88A46BDADC /* Immediate */,
				058B7724999243C3863A1ACE /* ImmediateTriangles */,
				E990B241187D4676AFE3196C /* Keyboard */,
				A0906934A4E24847B4AA7395 /* Lighting */,
				F068B936183646BC9C2A99A3 /* LightingAndTexture */,
				EB74C5BFB1394C7E87C180FE /* Model */,
				5E81D121A98141FCA96D94EF /* ModelView */,
				52599A59C87244E9820B3355 /* Mouse */,
				63628BEB206C49AC8216E3FA /* Texture */,
				6D0265E4A3E142FD8ED12B4C /* TextureLoader */,
				B725607715F44C7AB20FC473 /* TriangleBuffer */,
				38E4AD2C2FE34AD0850ABE2A /* TriangleColorBuffer */,
				D6420C90D62A49F2B3DBB851 /* TriangleOrtho */,
				1171954142374CDB91225F42 /* Version */,
				22E607D27CD8475BB03D16D6 /* ZERO_CHECK */,
				5EDEBE138CD74C5C99D0B41D /* install */,
				77BDA20525574D76B6F8AB96 /* uninstall */,
				FE80DAA424C34539BCB11065 /* glfw */,
				EFAF1251E5E04E03851A2167 /* accuracy */,
				D9FE1C1E909748179D6C6F9E /* clipboard */,
				C2D3744568E14F0EB635740A /* defaults */,
				81DA1925DC1140D1917E0421 /* events */,
				2253DB912EC9487897AA9CFB /* fsaa */,
				EBF2F60860E74912A92C33F3 /* gamma */,
				05AFCAE5FB794CB282804023 /* glfwinfo */,
				81ABEEC914CB44EDA5A5B108 /* iconify */,
				40547C360BB3497EA6E961D1 /* joysticks */,
				20C48D31ACB5463EAC7ABDD0 /* modes */,
				CB4C2987E7DE44DEA78E6502 /* peter */,
				1AFC9FE40C2B4F4D9E7A530C /* reopen */,
				3E1A50B68CF14439A664AF6F /* sharing */,
				32616AC0D7064BFCB3560C7A /* tearing */,
				EE93707E326E4231B9F1DCAC /* threads */,
				61DCA32A67B741CCAF109782 /* title */,
				B89E2379902E484EA404EEC7 /* windows */,
			);
		};
/* End PBXProject section */

/* Begin PBXShellScriptBuildPhase section */
		177B1E82377A4F019A75D6B4 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/yusun/Repositories/MyProjects/Up\\ and\\ Running\\ with\\ OpenGL/xcode -f /Users/yusun/Repositories/MyProjects/Up\\ and\\ Running\\ with\\ OpenGL/xcode/CMakeScripts/ZERO_CHECK_cmakeRulesBuildPhase.make$CONFIGURATION all";
			showEnvVarsInLog = 0;
		};
		2EAF04D3C9FC404182F4E428 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/yusun/Repositories/MyProjects/Up\\ and\\ Running\\ with\\ OpenGL/xcode -f /Users/yusun/Repositories/MyProjects/Up\\ and\\ Running\\ with\\ OpenGL/xcode/CMakeScripts/ALL_BUILD_cmakeRulesBuildPhase.make$CONFIGURATION all";
			showEnvVarsInLog = 0;
		};
		4ADB940176944A92BCB9DB99 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/yusun/Repositories/MyProjects/Up\\ and\\ Running\\ with\\ OpenGL/xcode/glfw -f /Users/yusun/Repositories/MyProjects/Up\\ and\\ Running\\ with\\ OpenGL/xcode/glfw/CMakeScripts/uninstall_cmakeRulesBuildPhase.make$CONFIGURATION all";
			showEnvVarsInLog = 0;
		};
		80AA86DCD3C84B61A4F17415 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/yusun/Repositories/MyProjects/Up\\ and\\ Running\\ with\\ OpenGL/xcode -f /Users/yusun/Repositories/MyProjects/Up\\ and\\ Running\\ with\\ OpenGL/xcode/CMakeScripts/install_postBuildPhase.make$CONFIGURATION all";
			showEnvVarsInLog = 0;
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		061AD0C3B66949B5A72FB4FA /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				849E8A1D29F84A1FB1DF4283 /* TextureLoader.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		0A11258459BF46E696D84818 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				9C7440C9A12541F0AEA6F9F9 /* GLFWApp.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		23E897ACE3DA4947BF4EFB50 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				E444FA26EF9E4EDB96247A23 /* clipboard.c in Sources */,
				38D51902B22B4139BF624B0D /* cocoa_clipboard.m in Sources */,
				6A67C1097D8346D898E6C26F /* cocoa_gamma.c in Sources */,
				97A6E6A39DEA439AAB161393 /* cocoa_init.m in Sources */,
				F043AEF10FBC4C01B6C8C5AA /* cocoa_joystick.m in Sources */,
				38D2FB50117B4A01B3317580 /* cocoa_monitor.m in Sources */,
				8BC90A2E166242599F41F40F /* cocoa_time.c in Sources */,
				966F96813D0449EE8A91B749 /* cocoa_window.m in Sources */,
				9CCCFD6D61E44D6C9A53811C /* context.c in Sources */,
				B47FE29E0C1C44EF825671F6 /* gamma.c in Sources */,
				1457D9DC655D4AB7869FA6F6 /* init.c in Sources */,
				E7F1984366A64D65A71B941A /* input.c in Sources */,
				F071F375369D44B9B7408855 /* joystick.c in Sources */,
				B607928751E64A13875975F7 /* monitor.c in Sources */,
				E9AEE65BC81C46DDA2CB80C4 /* nsgl_context.m in Sources */,
				FF7E0E379DC946C9B8A9A9AD /* time.c in Sources */,
				D0DEB34496BD404C9EE1FF8E /* window.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		265F152F68C34339A0E32BD4 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				CEE2A4A183364AD5A6B8A589 /* joysticks.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		29479A8620A94C75AD392AA9 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				FAA548E4AF1C4F94AF76E46A /* TriangleOrtho.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		31BF4B3B69B54605B457BD38 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				269E25242403490498441223 /* Mouse.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		31EAD46223954ECD81F9E957 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				72D20C1F17BD4DE0BE9A2319 /* DynamicMesh.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		3D9C5FA39D904A819CF497B8 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				CEFF4C83B7014323B4F2E35F /* getopt.c in Sources */,
				1948A0F768DE4B658D2C3D2F /* events.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4150BAD4D57F44D88AC5BB5B /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				89F91FCA0A954B48962D40C2 /* sharing.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		5616DB5CDD244D7DAA0F3536 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				33F6AE7AAAFC4467974483DD /* Lighting.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		6FB16E18F8E44B3999A521CD /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				AC44E6B443404DFF8E68C647 /* getopt.c in Sources */,
				C6FF6147DBAB429494C183A6 /* glfwinfo.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		76A85AA9A3B54DE78CD109AA /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				3E59F6769DAE40059793E76C /* getopt.c in Sources */,
				6CFE66C846A843F6B714852C /* clipboard.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		7A8903F23EB74102ADCF78E0 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1E33ECA5C9E5475CBCBCF636 /* TriangleBuffer.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		80D56E908D174763AA4F12E4 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				350E250D24494028A06AEFF8 /* tinycthread.c in Sources */,
				6B4DAD3840B14B9CAC48A760 /* threads.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		8BF6A020DD7C4CE6BFAE9B77 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				71FD68C8466E458D8DFA57CA /* title.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		8ECD87A9D77B4FF892A75B92 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				73FC78C134F0459488BDA609 /* getopt.c in Sources */,
				40090D25A0D449F5A4C1DA2C /* fsaa.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		A5897369A32D43E1B6C858C0 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				E8CFA4E5803F49ACB889F3DA /* TriangleColorBuffer.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		A6DB710C59054ABEA647C0DE /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1AB0987ABA154BBDA07BB3CE /* Texture.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		AF4CCA251BBE45CD915E6050 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				B47A5C6043BC4B338DCC4382 /* Cube.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		B5FCD84FFFBF4E1388FBA7C0 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				989D75A456B548CAAA2ABBBF /* peter.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		C420973EBFE24CFBA2C0C2DB /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				AEBEA7C939824836BEB67697 /* windows.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		CCD3E0F44194471D8769D206 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				F9D949B2CEB240DC98E74425 /* LightingAndTexture.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D5DDEBE38E4A4D57A27C81B7 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				28AE32E07F13479AAA7B9309 /* ModelView.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D85E69045C08410CAE2DECFA /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				A7C001FC2F134F78B6F95CA2 /* Model.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D86ED5C9C52E410988BB91F3 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				99ADE5FE42CB4CFABB857294 /* getopt.c in Sources */,
				5F1B2B0B3FC5480389CF8D08 /* iconify.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D9012C2180F344DF8B20B7CB /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				A86DFB8076AC41E79A3ADC29 /* defaults.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		E1C3718901234050857FA2A4 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				80446A59D95A4155A494A63C /* Keyboard.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		E250C89D06D144DBA76C5A32 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				573BCF5541AE44A5AC70BC82 /* getopt.c in Sources */,
				39A369751BD24ADDB3DCA021 /* modes.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		E62EB3E896C2495791EE44DD /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				E35CAD834A2747FB8251BA6F /* Version.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		E67BEA807E904985B2CC596B /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				FFB88D0E8CF0461FB28D9291 /* tearing.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		ED5A70789CED4D1681D4DC5B /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				D2412F912ADA4E46A3F10D92 /* accuracy.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		EF8A9244FD9840E0B3837A07 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				9D2D5393281D498AAB6C0EFF /* getopt.c in Sources */,
				39763E761EA14B7D90C11E13 /* gamma.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		F404C0EBD27B4D518BFA706B /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1A8970B1B05145CEB99EB78A /* reopen.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		F958765BEF454EDEBD9F6A39 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				5D8BA2423DD54883A071DBF6 /* ImmediateTriangles.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		F98E0C990ED54187A12088A3 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				2CB7A8C5354C4262AF0F452E /* Immediate.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		FC6D368D0D0B4E818E6997FF /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				039327E534AE49909C50D7DE /* Extensions.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		FCA211AAF0274FBCADF8FF8A /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				070F6A81BBD04FD8AE80DFF1 /* GLFWwindow.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		0BBF867D96EF4C8BB6B3CEB4 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = EBF2F60860E74912A92C33F3 /* gamma */;
			targetProxy = 4070FF05B22C4F4280C1E231 /* PBXContainerItemProxy */;
		};
		0C65B0527A674FEF9349A9B3 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22E607D27CD8475BB03D16D6 /* ZERO_CHECK */;
			targetProxy = 25A6706F6F8C4159813025D2 /* PBXContainerItemProxy */;
		};
		0F51BAA97E9B431F93E2139B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FE80DAA424C34539BCB11065 /* glfw */;
			targetProxy = 3101DC112DA741489B8E0739 /* PBXContainerItemProxy */;
		};
		10A0C1319F9C46F1AE0BBD41 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = EB74C5BFB1394C7E87C180FE /* Model */;
			targetProxy = AD2657866E6A494A805BC203 /* PBXContainerItemProxy */;
		};
		11FD93CB60B64B5EA9FDEBC5 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FE80DAA424C34539BCB11065 /* glfw */;
			targetProxy = 08571C7ABE624286B350F015 /* PBXContainerItemProxy */;
		};
		147C2CD3D7F1454EA238BC45 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FE80DAA424C34539BCB11065 /* glfw */;
			targetProxy = 55D735378D8647E4B2E23884 /* PBXContainerItemProxy */;
		};
		1885B26BE5F3444D8857FCA3 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22E607D27CD8475BB03D16D6 /* ZERO_CHECK */;
			targetProxy = 0694F67E01A14275953431D6 /* PBXContainerItemProxy */;
		};
		1A612168FDFE40ADBDE1AEC2 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 058B7724999243C3863A1ACE /* ImmediateTriangles */;
			targetProxy = 728E8D5882CE4F91A653C7B1 /* PBXContainerItemProxy */;
		};
		1AC6BACE061E47629C7D98F9 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22E607D27CD8475BB03D16D6 /* ZERO_CHECK */;
			targetProxy = 60AF876BA9DD4DAA922160E1 /* PBXContainerItemProxy */;
		};
		1C59DA1336F5436C9CD0D880 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22E607D27CD8475BB03D16D6 /* ZERO_CHECK */;
			targetProxy = 9C3ACA3E079D4F97BE168AFB /* PBXContainerItemProxy */;
		};
		20035DC283D84100BCB9D5A3 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = B0F4BF1CD07B49AC9D598B28 /* ALL_BUILD */;
			targetProxy = DC9E4381537D481B8103BF68 /* PBXContainerItemProxy */;
		};
		23FDF6DCA7A9419BA7A28EA5 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FE80DAA424C34539BCB11065 /* glfw */;
			targetProxy = 2C358AD6EB96421F9B72C2F5 /* PBXContainerItemProxy */;
		};
		296030F6F24545A0848E644D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22E607D27CD8475BB03D16D6 /* ZERO_CHECK */;
			targetProxy = 48FF4C62089C42F6ACC1029D /* PBXContainerItemProxy */;
		};
		2961416B14AE470FA8DD9830 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22E607D27CD8475BB03D16D6 /* ZERO_CHECK */;
			targetProxy = D89C8C9149444CC99027AB79 /* PBXContainerItemProxy */;
		};
		2A29224C3D684239A9B0C9B6 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FE80DAA424C34539BCB11065 /* glfw */;
			targetProxy = 914D877FE3194D219BA60BBE /* PBXContainerItemProxy */;
		};
		2A515FC99C554F9583C01554 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 52599A59C87244E9820B3355 /* Mouse */;
			targetProxy = 838DF657628141BCA948FF6E /* PBXContainerItemProxy */;
		};
		2C2A1E618C45432D9D360686 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FE80DAA424C34539BCB11065 /* glfw */;
			targetProxy = 5272B3CD1D53403E9DFFEAEB /* PBXContainerItemProxy */;
		};
		2C3D568B9864476C84E28901 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 05AFCAE5FB794CB282804023 /* glfwinfo */;
			targetProxy = 6CD06D5BECD74EA5B97F8224 /* PBXContainerItemProxy */;
		};
		2DC38C371B9046AC845BF7EE /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FE80DAA424C34539BCB11065 /* glfw */;
			targetProxy = 417DBF4BC3CD4382BD2B2C2A /* PBXContainerItemProxy */;
		};
		2E06DB8692BD4FA1AFFB6AFE /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FE80DAA424C34539BCB11065 /* glfw */;
			targetProxy = FE73DB49F7E64982B7293324 /* PBXContainerItemProxy */;
		};
		30A0ECFCA60D4D03944FAC97 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D9FE1C1E909748179D6C6F9E /* clipboard */;
			targetProxy = 8A4B903FF7CB4E5B9A74320F /* PBXContainerItemProxy */;
		};
		31E6E515994646AFBDDA2A60 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22E607D27CD8475BB03D16D6 /* ZERO_CHECK */;
			targetProxy = 66661C0566DE4494892BE42D /* PBXContainerItemProxy */;
		};
		31F4D385D40243E384C3F213 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 1AFC9FE40C2B4F4D9E7A530C /* reopen */;
			targetProxy = CD6EA7754143445EA4E4F1D9 /* PBXContainerItemProxy */;
		};
		3808BE080E5C4D26A1B803C5 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = E990B241187D4676AFE3196C /* Keyboard */;
			targetProxy = 305AB97F532D44629F7BD1A8 /* PBXContainerItemProxy */;
		};
		38B1AE60C4C2497195ADEB90 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22E607D27CD8475BB03D16D6 /* ZERO_CHECK */;
			targetProxy = C2DD8ACED0A04522878DC559 /* PBXContainerItemProxy */;
		};
		38BDECECBFBF41EE94B212C2 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FE80DAA424C34539BCB11065 /* glfw */;
			targetProxy = B94DC222D493415E850C6685 /* PBXContainerItemProxy */;
		};
		39C2B126EDD8411F988249ED /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FE80DAA424C34539BCB11065 /* glfw */;
			targetProxy = A9A2B7B2D91A45C897D617B8 /* PBXContainerItemProxy */;
		};
		424CF74934E24DF497991BD4 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 32616AC0D7064BFCB3560C7A /* tearing */;
			targetProxy = B5B658286F7749BEB77480C8 /* PBXContainerItemProxy */;
		};
		42A51F07AD0042FDAA06D6B1 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 40547C360BB3497EA6E961D1 /* joysticks */;
			targetProxy = 31795BBAF7A349FFBDF22FF0 /* PBXContainerItemProxy */;
		};
		46AF412874A54BAE92B99C96 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22E607D27CD8475BB03D16D6 /* ZERO_CHECK */;
			targetProxy = 5AD1652564BE4BD6AEFD947E /* PBXContainerItemProxy */;
		};
		48A0E66693644D8C977A2F97 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22E607D27CD8475BB03D16D6 /* ZERO_CHECK */;
			targetProxy = 2AA51BC50EA0413891C78E9A /* PBXContainerItemProxy */;
		};
		4D9203F0AAEB48A5BB75C8A2 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FE80DAA424C34539BCB11065 /* glfw */;
			targetProxy = 6684A2BB3D8848F6B28542FE /* PBXContainerItemProxy */;
		};
		5307C576FBFF4CCABE9CAF09 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D6420C90D62A49F2B3DBB851 /* TriangleOrtho */;
			targetProxy = 2F27FEA2B94E4D24AA5457BF /* PBXContainerItemProxy */;
		};
		552DCF0B7FFC49C1B5841130 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 528194E3821740958EF2CE75 /* GLFWwindow */;
			targetProxy = 208DAB3C12A2492694DB0399 /* PBXContainerItemProxy */;
		};
		55ADAC2844DA48018BE56165 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22E607D27CD8475BB03D16D6 /* ZERO_CHECK */;
			targetProxy = 96818417E17342C9807583CC /* PBXContainerItemProxy */;
		};
		57241AB4A6FB45B4A15532FE /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FE80DAA424C34539BCB11065 /* glfw */;
			targetProxy = 8B8B2B29708C428FB9D9B4CB /* PBXContainerItemProxy */;
		};
		5805EF3E062F48AEB8D1B329 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22E607D27CD8475BB03D16D6 /* ZERO_CHECK */;
			targetProxy = B4C886A47C4049A294817BF9 /* PBXContainerItemProxy */;
		};
		5BAF48931C364F36B68ADA04 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 61DCA32A67B741CCAF109782 /* title */;
			targetProxy = 4F1633413DAB46BA919BA826 /* PBXContainerItemProxy */;
		};
		5BD0DE268D8C4581BABF2F21 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22E607D27CD8475BB03D16D6 /* ZERO_CHECK */;
			targetProxy = 4FA5CD074F7F42788544ACB0 /* PBXContainerItemProxy */;
		};
		5CDD04F8E18B4AF69E8AF281 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22E607D27CD8475BB03D16D6 /* ZERO_CHECK */;
			targetProxy = 15590697ADAF45F48AC0B589 /* PBXContainerItemProxy */;
		};
		5CECE787A7244E4FB59ACDF8 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FE80DAA424C34539BCB11065 /* glfw */;
			targetProxy = 66A162C92FBA49C49EDE0557 /* PBXContainerItemProxy */;
		};
		5D670DFD37454758ABD804AE /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FE80DAA424C34539BCB11065 /* glfw */;
			targetProxy = C12B6E5E1B114E31895C3A36 /* PBXContainerItemProxy */;
		};
		5EA7A466B5AF4627B51B9C50 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FE80DAA424C34539BCB11065 /* glfw */;
			targetProxy = 8F9EF5BF7C1C4C4F96987BD6 /* PBXContainerItemProxy */;
		};
		5F8C1F019F8743E0AF005C4C /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22E607D27CD8475BB03D16D6 /* ZERO_CHECK */;
			targetProxy = FD7DE194CF3A491AACB5789F /* PBXContainerItemProxy */;
		};
		5F8DCD6A7BA04357BBAD475D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = B725607715F44C7AB20FC473 /* TriangleBuffer */;
			targetProxy = 4C96FE24AE544527BCE6AA7D /* PBXContainerItemProxy */;
		};
		6133088C36564E08B93562AA /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 38E4AD2C2FE34AD0850ABE2A /* TriangleColorBuffer */;
			targetProxy = BEBCCB8DC99B49098DF921BC /* PBXContainerItemProxy */;
		};
		6154BC5D09A14450B0EF1AF0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22E607D27CD8475BB03D16D6 /* ZERO_CHECK */;
			targetProxy = DD319D3A03CA4B22A0203696 /* PBXContainerItemProxy */;
		};
		621BD7174D2F4C32BCE8B5F4 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FE80DAA424C34539BCB11065 /* glfw */;
			targetProxy = 8C1B76DAF9D945B9B6740797 /* PBXContainerItemProxy */;
		};
		636DAACD909C4F63B7D5F3DC /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 63628BEB206C49AC8216E3FA /* Texture */;
			targetProxy = 467349F973124273BBA2C80B /* PBXContainerItemProxy */;
		};
		63D788ACCE9B46B4BC58DA6A /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FE80DAA424C34539BCB11065 /* glfw */;
			targetProxy = 952ADB6BB1BC48B4B4700D9A /* PBXContainerItemProxy */;
		};
		697B1221F68045C1A04297EF /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22E607D27CD8475BB03D16D6 /* ZERO_CHECK */;
			targetProxy = F991AAFC683A45E8BE52ADEB /* PBXContainerItemProxy */;
		};
		6B36A0A723784926B646B4DD /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22E607D27CD8475BB03D16D6 /* ZERO_CHECK */;
			targetProxy = 142B91D5F7454757B81622DB /* PBXContainerItemProxy */;
		};
		6D91E59F51D94370908ACCEB /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FE80DAA424C34539BCB11065 /* glfw */;
			targetProxy = 4B26C2704F124217AA98EA7A /* PBXContainerItemProxy */;
		};
		72DF0A1108ED43559F6C4E8B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FE80DAA424C34539BCB11065 /* glfw */;
			targetProxy = 3E959825C4954814AA62C076 /* PBXContainerItemProxy */;
		};
		74F66E12B4D146A49D139D25 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22E607D27CD8475BB03D16D6 /* ZERO_CHECK */;
			targetProxy = 93E54DA518A546BE9F8AC985 /* PBXContainerItemProxy */;
		};
		7841B4EEFCC146559102BCE5 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22E607D27CD8475BB03D16D6 /* ZERO_CHECK */;
			targetProxy = 9D46EA602F5447DE8225A2B4 /* PBXContainerItemProxy */;
		};
		78516D628E774868B901F458 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FE80DAA424C34539BCB11065 /* glfw */;
			targetProxy = 596AAABC416E4A699548DF94 /* PBXContainerItemProxy */;
		};
		793C6E252E434A19BCE60A17 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22E607D27CD8475BB03D16D6 /* ZERO_CHECK */;
			targetProxy = B261E0E6E53248ABBFD30DF0 /* PBXContainerItemProxy */;
		};
		7BE0C0B0703A475B9008AFCE /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FE80DAA424C34539BCB11065 /* glfw */;
			targetProxy = 99188C41702D446893FC7C47 /* PBXContainerItemProxy */;
		};
		7BE44F9C2D7F478486D72545 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22E607D27CD8475BB03D16D6 /* ZERO_CHECK */;
			targetProxy = 310E574CD5C44BF39FB6CC4C /* PBXContainerItemProxy */;
		};
		7C3CB6DA7D594B35A5AA2160 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22E607D27CD8475BB03D16D6 /* ZERO_CHECK */;
			targetProxy = E042D53ED00B4D4CB4AEBFF4 /* PBXContainerItemProxy */;
		};
		7CF2B0C2DEB0446FBB8BF745 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = CB4C2987E7DE44DEA78E6502 /* peter */;
			targetProxy = 71273C9B09F344ED898C6F75 /* PBXContainerItemProxy */;
		};
		844200E03A0C48CE989CC06B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FE80DAA424C34539BCB11065 /* glfw */;
			targetProxy = 87FABC32134646C285FA98A0 /* PBXContainerItemProxy */;
		};
		8851EB490B38478F89B0990E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FE80DAA424C34539BCB11065 /* glfw */;
			targetProxy = 76DA2908070341BA9ADD2315 /* PBXContainerItemProxy */;
		};
		8C00A744BADD4AE1BD565017 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22E607D27CD8475BB03D16D6 /* ZERO_CHECK */;
			targetProxy = 214DF67A22E246E1B7C9D9B9 /* PBXContainerItemProxy */;
		};
		8D25C10660A34D63BCD937D5 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FE80DAA424C34539BCB11065 /* glfw */;
			targetProxy = AD4C82C30C744FE79F628DF5 /* PBXContainerItemProxy */;
		};
		8E10D2E8469C454EA6F857D8 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22E607D27CD8475BB03D16D6 /* ZERO_CHECK */;
			targetProxy = D8659861858643D7BFBC417D /* PBXContainerItemProxy */;
		};
		8EE3C90561514454ADD165AB /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22E607D27CD8475BB03D16D6 /* ZERO_CHECK */;
			targetProxy = 0FD77FA3C1564BDAA31E5EEE /* PBXContainerItemProxy */;
		};
		90005905DC2F434D87A76183 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FE80DAA424C34539BCB11065 /* glfw */;
			targetProxy = F0D175B365F7466890226C66 /* PBXContainerItemProxy */;
		};
		910AA26D81634ABAA45A2AA9 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2253DB912EC9487897AA9CFB /* fsaa */;
			targetProxy = 2F2EB778D46A4EA594E280C5 /* PBXContainerItemProxy */;
		};
		9148BD727228446295B5F720 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FE80DAA424C34539BCB11065 /* glfw */;
			targetProxy = 54DB4F6E730A49A1B1B30427 /* PBXContainerItemProxy */;
		};
		9291220B3BF84D5FBF848D46 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 6D0265E4A3E142FD8ED12B4C /* TextureLoader */;
			targetProxy = 2033836BCA3B4899B5BE70D2 /* PBXContainerItemProxy */;
		};
		9316BBDF36B64AE186EA13DB /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = B8F90B86B4744756A9857A68 /* GLFWApp */;
			targetProxy = AD92A79FA5E64B738D404EB8 /* PBXContainerItemProxy */;
		};
		970C4E1713E04B068518F09B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 40CFB08D3B9E4A1EA252DDF2 /* Cube */;
			targetProxy = 7B2544AE65C04AACB6E41D7B /* PBXContainerItemProxy */;
		};
		9B403DD58877424D8486A5F5 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FE80DAA424C34539BCB11065 /* glfw */;
			targetProxy = 8B8EAABA68FF47D3BEA24753 /* PBXContainerItemProxy */;
		};
		9D3152487C4B46D89244DE5E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22E607D27CD8475BB03D16D6 /* ZERO_CHECK */;
			targetProxy = F58074D3EA464D99A542BCA0 /* PBXContainerItemProxy */;
		};
		9FE6E78AB7B2499888CBAC0A /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = EE93707E326E4231B9F1DCAC /* threads */;
			targetProxy = E5FF37E56335482F977FE7E0 /* PBXContainerItemProxy */;
		};
		A07D871B287648499B31848F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FE80DAA424C34539BCB11065 /* glfw */;
			targetProxy = 3AB58DA7552D4CB3B7B991BD /* PBXContainerItemProxy */;
		};
		A258B895EE614240B0043E53 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FE80DAA424C34539BCB11065 /* glfw */;
			targetProxy = BAEC641BEBD2490BB52F2047 /* PBXContainerItemProxy */;
		};
		A269693EE4074851BB733D2F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22E607D27CD8475BB03D16D6 /* ZERO_CHECK */;
			targetProxy = 0D4ED5EE5EA9434DA0E05B99 /* PBXContainerItemProxy */;
		};
		A2B1797B30B347A2A678E519 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22E607D27CD8475BB03D16D6 /* ZERO_CHECK */;
			targetProxy = C80B966217914ADDA7D1A8BF /* PBXContainerItemProxy */;
		};
		A60A7346A572467BBCED7614 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = F068B936183646BC9C2A99A3 /* LightingAndTexture */;
			targetProxy = B5752E546CFD4DFB866660EF /* PBXContainerItemProxy */;
		};
		A94811831FAD4EEDBC735E82 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FE80DAA424C34539BCB11065 /* glfw */;
			targetProxy = BD5AC9EE89B54A44BA2B9AA2 /* PBXContainerItemProxy */;
		};
		AABB74AAF40948C4B38AA81C /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22E607D27CD8475BB03D16D6 /* ZERO_CHECK */;
			targetProxy = 5455F8B4889C409A8BC5BBBE /* PBXContainerItemProxy */;
		};
		AF0E235A49354D2DA9024474 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22E607D27CD8475BB03D16D6 /* ZERO_CHECK */;
			targetProxy = AD0BD50A034F46E89E78F677 /* PBXContainerItemProxy */;
		};
		B00D66C34AEB48F2AD9CC9F6 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22E607D27CD8475BB03D16D6 /* ZERO_CHECK */;
			targetProxy = 6D8ECDC3C7E7413899CB5612 /* PBXContainerItemProxy */;
		};
		B288258EB82B4970A52AEC95 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 81DA1925DC1140D1917E0421 /* events */;
			targetProxy = F2107F047B3C447D8BC7F8EA /* PBXContainerItemProxy */;
		};
		B388FEC9A0384886A801EDC3 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FE80DAA424C34539BCB11065 /* glfw */;
			targetProxy = D70D7FD069E2414592886C24 /* PBXContainerItemProxy */;
		};
		B82D9073E0DD47D6B4549319 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FE80DAA424C34539BCB11065 /* glfw */;
			targetProxy = 3A55004DE8F1436BA139B085 /* PBXContainerItemProxy */;
		};
		B90910F85BE5469BBBEEEFAC /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 6F6EED88B3DB425A9D61F6D3 /* Extensions */;
			targetProxy = 11BB3CDAE8CA48799D47FA94 /* PBXContainerItemProxy */;
		};
		BD1B9F46B922486D8FCCAB27 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D55B409F4E15442F9DA1B1FA /* DynamicMesh */;
			targetProxy = E3BE3796DD69491896628957 /* PBXContainerItemProxy */;
		};
		BD23DBA4F708499297ECFD2C /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 81ABEEC914CB44EDA5A5B108 /* iconify */;
			targetProxy = 679227F49DF148559793B632 /* PBXContainerItemProxy */;
		};
		C0C44487E1A6484CB8DDD504 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = A0906934A4E24847B4AA7395 /* Lighting */;
			targetProxy = A7FA101A693644D6AE9F6A87 /* PBXContainerItemProxy */;
		};
		C4E1194D02C944809162B37B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 20C48D31ACB5463EAC7ABDD0 /* modes */;
			targetProxy = 009A0F99E707468E9D7D9A17 /* PBXContainerItemProxy */;
		};
		C4EE77688EB24197B508036D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FE80DAA424C34539BCB11065 /* glfw */;
			targetProxy = B6CCCF57BB244C2AB28BC1B9 /* PBXContainerItemProxy */;
		};
		C9E6A2BC3E6E48FD93BB9281 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FE80DAA424C34539BCB11065 /* glfw */;
			targetProxy = 4CE060FE57204780A1D73A5F /* PBXContainerItemProxy */;
		};
		CBCC3418B2074CA79BF75BE9 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22E607D27CD8475BB03D16D6 /* ZERO_CHECK */;
			targetProxy = 6EBC1C37FFB148998FC981C8 /* PBXContainerItemProxy */;
		};
		D2B6C705D3144E55819FA3F6 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FE80DAA424C34539BCB11065 /* glfw */;
			targetProxy = F1733B9946C94397B9A8183E /* PBXContainerItemProxy */;
		};
		D72B268F84884296A272A680 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22E607D27CD8475BB03D16D6 /* ZERO_CHECK */;
			targetProxy = 703C51EF3D6A4B419B7478A4 /* PBXContainerItemProxy */;
		};
		D7643562E9284A1F95654059 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FE80DAA424C34539BCB11065 /* glfw */;
			targetProxy = 1BDF60E3E7344234A0F8A640 /* PBXContainerItemProxy */;
		};
		DC0D82A6891E4F2284AEF1B3 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = C2D3744568E14F0EB635740A /* defaults */;
			targetProxy = 8E6B4F15066B4E01A2CEBD25 /* PBXContainerItemProxy */;
		};
		DEAA8B20E349429B896EC929 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22E607D27CD8475BB03D16D6 /* ZERO_CHECK */;
			targetProxy = C0D54BE3AEAD4EF5ABAD6ED2 /* PBXContainerItemProxy */;
		};
		DEDA840BDBD64B7DAEDAA2D2 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22E607D27CD8475BB03D16D6 /* ZERO_CHECK */;
			targetProxy = 528DDD4DE10043E391837A15 /* PBXContainerItemProxy */;
		};
		DFF76F4342444843A48080BB /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 1171954142374CDB91225F42 /* Version */;
			targetProxy = 9F3E1848968F4DE7BECE845D /* PBXContainerItemProxy */;
		};
		E3E73D89756E42AEAAF7D5E8 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FE80DAA424C34539BCB11065 /* glfw */;
			targetProxy = C385553D988841E18B5BBE31 /* PBXContainerItemProxy */;
		};
		E64FBEE5CC70453EA5CAF9FD /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 5E81D121A98141FCA96D94EF /* ModelView */;
			targetProxy = 86C8A605C6C84418AD2F27C5 /* PBXContainerItemProxy */;
		};
		F1F23545F8E04736B626DC19 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22E607D27CD8475BB03D16D6 /* ZERO_CHECK */;
			targetProxy = 7D5A0449858F42B790667E73 /* PBXContainerItemProxy */;
		};
		F5651803B21049028D291F4E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 3E1A50B68CF14439A664AF6F /* sharing */;
			targetProxy = 73568395A1414272B6CBAAD1 /* PBXContainerItemProxy */;
		};
		F56B9123D522447B94842307 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = EFAF1251E5E04E03851A2167 /* accuracy */;
			targetProxy = 3BAF18B314B3451E87F513AA /* PBXContainerItemProxy */;
		};
		F91F3027786C40C192346995 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22E607D27CD8475BB03D16D6 /* ZERO_CHECK */;
			targetProxy = 8479BE137E544B2E8A79971B /* PBXContainerItemProxy */;
		};
		F9DE76042616433BAAF5F6A6 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = B89E2379902E484EA404EEC7 /* windows */;
			targetProxy = 99466D21DFD141298698EA5E /* PBXContainerItemProxy */;
		};
		FFEF1787492D428BAC035107 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = C15DCEF08B994A88A46BDADC /* Immediate */;
			targetProxy = 6DA66529EEAB4B1BA1DA9654 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		03DFDFB1674541CA8CA50A09 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     ";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Texture;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		04C63E2695D74CD7B180F78D /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TextureLoader;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		05BDB1F4C6C749538745CDAA /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = joysticks;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		0634D3D479C1458DB640275A /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TriangleColorBuffer;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		06ED81F183B3425B9997323A /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = iconify;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		07D5AEC9091A46CEBDF8A6BA /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		0946CC72DF8E47CCAE653372 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INFOPLIST_FILE = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/threads.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = threads;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		09E3ED56CEBB4B529EE20C53 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = modes;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		0A34C9F475894D17AF0FE7AD /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = defaults;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		10E71D8EA2174704AB86472F /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INFOPLIST_FILE = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/tearing.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = tearing;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		126010248AF24E088CB824DA /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INFOPLIST_FILE = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/windows.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = windows;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		1341ABCF9A7F440894901BA8 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = defaults;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		13F704CDDE1D490C8EE8ED3F /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Cube;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		144B45F5956D4BF1BD845EAB /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     ";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Keyboard;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		18A5703DBFCC4EC5BC416635 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = clipboard;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		1A998F6C81714F54AC1A633C /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = peter;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		1BA636A6036442A5B1590A83 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = iconify;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		1D1BA1265B92457EAA6D42C6 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = joysticks;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		1D4AD309D46A465BA973F948 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TextureLoader;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		1EF22B137D764FE4A0B70134 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INFOPLIST_FILE = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/title.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = title;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		21D4E5119E8149D39ADB5CF2 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Mouse;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		235F88002DB348738D8AB7C6 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Texture;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		2428DC0C7704456D81D423C4 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     ";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ModelView;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		2487F28CFAD74050A65BB228 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = defaults;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		271B85E9E73C40BAABA45DA1 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = peter;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		27AEAC8E016A4ED2A893DAFF /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = LightingAndTexture;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		2906C78FEC1346DDBD645B24 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = uninstall;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		29D2156C56294004B991CAEA /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     ";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TriangleBuffer;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		2AED14B9EDE8411FA6A44DF4 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = events;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		2B0EF9B8A4CD420F8C64D20C /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = GLFWApp;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		2F4F614AAE4248EA9E62A17E /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = glfwinfo;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		30FC253D0C8F469CBFEDE4B7 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INFOPLIST_FILE = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/sharing.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = sharing;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		31D44E5EEE714E53A7D8D6F8 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = events;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		32682C7AB4E04129BC093FEE /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ImmediateTriangles;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		3795259B921A471AB5578530 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     ";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = DynamicMesh;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		37C816F2660F42C8837B2F39 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     ";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Immediate;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		37C9DD1A254A48A6AA037A15 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TriangleColorBuffer;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		38578565D54B4F69AC0974F0 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TriangleColorBuffer;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		3FACE78F27D2436D9EDC1110 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = gamma;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		406513A5DCDC41FFB84AAD66 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = events;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		41560EB3DE364529ADDB0F8D /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TriangleBuffer;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		41F7BF7E25FE43CE80169249 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = glfwinfo;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		46034A437C394A60B2D3FBA2 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = reopen;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		4783B6BB72F347C89A18CA3C /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		47A95A55152247788B17B59C /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Version;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		49061B8BCB8D41FBABC258CF /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = peter;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		49F61297F70E4010A110AA96 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					_GLFW_USE_CONFIG_H,
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src\"",
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LIBTOOLFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = glfw3;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		4C6241B1D9C9475DA033AFD2 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = defaults;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		4E08B9A04E62402FAC0B1FBD /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = reopen;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		50D719DD8E4E41C6AC04A6EB /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		51122B12455C438EBFAB4506 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INFOPLIST_FILE = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/threads.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = threads;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		51EC2B2EB2DC46BDB294181B /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Mouse;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		52475041FEAD407C9B835A1D /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		5593240837FD4B74AC9EE41D /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = peter;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		55985735F9FE4F23A5A35823 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     ";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Cube;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		55B84C3FB05440159F2C335E /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk;
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/build";
			};
			name = Release;
		};
		58F003D1AB434088AFB0F6D6 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INFOPLIST_FILE = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/tearing.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = tearing;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		5AC2D02016D24168A53F88C8 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INFOPLIST_FILE = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/accuracy.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = accuracy;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		5E0D98B714154CF9878607B4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		5E9C5B284492492AACF8F45B /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     ";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Mouse;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		5EFD49EF00AC48D19338B8D7 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Extensions;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		63F590DD0F7746EE81C3C564 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     ";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ImmediateTriangles;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		6571101AC65949A791D8617E /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INFOPLIST_FILE = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/threads.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = threads;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		6580AEE2AE5C4190B21EFC39 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = GLFWwindow;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		659380947C204680BF32D558 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = events;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		6655386E74DB4F5DBB4813CE /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Version;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		66E949A6420D4AA0AD010999 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = DynamicMesh;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		670326471EE74EF492B6B725 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ImmediateTriangles;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		673EDB8B8F8B4AE2BE21FB14 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     ";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Lighting;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		6862A8D4801241EEB8A859B1 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = iconify;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		6AF2BA6A95E14064A881380B /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INFOPLIST_FILE = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/threads.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = threads;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		6BED1D3101F84D518CB57F99 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INFOPLIST_FILE = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/title.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = title;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		6F051EA3059C4C1685598A4A /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					_GLFW_USE_CONFIG_H,
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src\"",
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LIBTOOLFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = glfw3;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		6FABB9505A054C849F27BEC7 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = reopen;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		70936BA86CF94515943165B6 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = clipboard;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		71B251544FC4470EB083BBB3 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Cube;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		73470A258F4140118F8F8302 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     ";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TriangleColorBuffer;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		74689524945545A4A86BCFEA /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk;
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/build";
			};
			name = RelWithDebInfo;
		};
		74D88F0F2EE64A20948235C5 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INFOPLIST_FILE = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/accuracy.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = accuracy;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		760E9125CC1E4B4199E430C7 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     ";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TextureLoader;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		773D8421DCAB42C88752771F /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Texture;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		788613907D194EE09FE98296 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = GLFWwindow;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		792DFB07E1224E4EA5DCB9A9 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = modes;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		79B3DEB517E74EEA91DD7506 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INFOPLIST_FILE = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/sharing.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = sharing;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		79D606D4A54F41CBADA4A934 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = gamma;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		7A97D097BF98499C99CCF620 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ModelView;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		7C0C4D35D2244315984F5A14 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = GLFWwindow;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		7D52795D8B6145D3832A133F /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = fsaa;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		7D88486C2071425A933654C3 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = LightingAndTexture;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		80A32E396CCB4A02801C90EC /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = GLFWApp;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		82B109851AB24244A5382AFF /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = reopen;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		837094156BBA4E93B796847D /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		85EC682B2A6E495DA98A96A5 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Model;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		86D5085BF35E4323BD20BF76 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Keyboard;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		88B1733B02434CD2BD8BAC84 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = clipboard;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		89E79B05BFF74957B9ADFFB5 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		8B91BDB9547C49A094B55ED9 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TriangleBuffer;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		8C8D3BCE202448DAB0711B1F /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ModelView;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		8F77CFD5E2D04029B7E22238 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Texture;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		913701797E044DFEBC7CD564 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = LightingAndTexture;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		91948C2195C34449AF2B13A6 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = joysticks;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		9254A89FD10C47AFB279D433 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INFOPLIST_FILE = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/title.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = title;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		93A2E3B72DEC4B0A990962DC /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					_GLFW_USE_CONFIG_H,
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src\"",
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LIBTOOLFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = glfw3;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		94E6581C36E441B7B00F531B /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = joysticks;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		961BAAE98CB64AFAB581328A /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Cube;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		9641A1F6D6194A138EADC9E3 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = fsaa;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		9BFFC7BB572D4FEEBE59DDAC /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = gamma;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		9C10D22471824013AC1F32D1 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = uninstall;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		9FC4E37FB9CC44C5AE579B33 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INFOPLIST_FILE = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/accuracy.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = accuracy;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		9FC71CFDDB4E4E6BB9AC18AF /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TriangleOrtho;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		A062EFA62F1A49848FCEFC8B /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INFOPLIST_FILE = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/tearing.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = tearing;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		A1379C39B3864221AD0BC488 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     ";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = LightingAndTexture;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		A27C711200AB49D29BD1386C /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INFOPLIST_FILE = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/sharing.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = sharing;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		A368844AEF33406EB89E6096 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Extensions;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		A6540BD80EC6411F918D7359 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TriangleOrtho;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		A82125F18D104BA58D70AEEE /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = gamma;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		ADB1D140C5A2465D8B0A3975 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     ";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = GLFWApp;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		AE1ADC1F6897471C91B07840 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Immediate;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		AFCC608DA01E4BF590D3421A /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk;
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/build";
			};
			name = MinSizeRel;
		};
		B3B8C9F6AE994A37A89EC49B /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INFOPLIST_FILE = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/windows.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = windows;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		B551B12904CC49C292480522 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Lighting;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		B60A14690A084560A609F150 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Model;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		B686010F95E24ED2AD8BA46B /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INFOPLIST_FILE = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/accuracy.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = accuracy;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		B7D8E7D942914647ADC84822 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ImmediateTriangles;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		B89787F99A6F47D4A1841276 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Lighting;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		B9DF0A8E43304D42BB03D0F6 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = uninstall;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		BA5741E7DA0D467DAE497E4A /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = glfwinfo;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		BB6A33B01DE446998BB87B4E /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Keyboard;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		BC540CBC0B404B2589B752B4 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INFOPLIST_FILE = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/sharing.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = sharing;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		BCEE901F0A38451AB34543A7 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = GLFWApp;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		BD1948ECAC3D4EBD814DC0E6 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		BE3B56150C6C44B2BC8CC49D /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = clipboard;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		BEA685DF548F47699765752E /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TextureLoader;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		BFBEFAEFD3F0410685CBBC75 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = fsaa;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		C027F3C0EDB74AFC81F0E3DF /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Version;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		C3EEF00F20534A778CD7E28B /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = modes;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		C6B62EA56D544522BE18D0A5 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Mouse;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		C6E874891CF445C89020FD6F /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = DynamicMesh;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		C978268928CC471787EF0ABF /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = DynamicMesh;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		C9C359D86C7C40579B17411E /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk;
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/build";
			};
			name = Debug;
		};
		CB779D2D71B64E9EA9BB9706 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Extensions;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		CCA5A771BE9F407EA628A752 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     ";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Version;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		CDC4A9E77AA947DFADA05588 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INFOPLIST_FILE = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/windows.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = windows;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		CEC0D82520454D53BEA5023D /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     ";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Extensions;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		CFF66833A5304B0E96953FC6 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		D066279434574D7CB121CDEE /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = modes;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		D26BD2D94DCE4FE99D90915F /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Immediate;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		D7FC489BC50B4C1B94EF45C6 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Model;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		D86F2B6F99334899B7E3BE06 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = fsaa;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		D8C0E67315F94A66B72A9D2F /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TriangleOrtho;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		DB3635B6E5C24212B123B018 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     ";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = GLFWwindow;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		DB3DEB25861B4D00B282705A /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Immediate;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		DFAA1D7BC4EC4C14A01E69B2 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = glfwinfo;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		E5516BA1D0004F28970AA2E1 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ModelView;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		EAE28EE7F0AE4EC8874DA328 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TriangleBuffer;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		EC3C62C04B05492E9E6B22EA /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     ";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Model;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		EC695F96B6654C6F974418F1 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Keyboard;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		ECB8BAB67BE540DD86B4A4A5 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/MinSizeRel/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = iconify;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		EDD469E136C24870B91C310B /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INFOPLIST_FILE = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/title.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = title;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		EE0AB3907767437FBD4364E0 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					_GLFW_USE_CONFIG_H,
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/src\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src\"",
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = "     -Wall";
				OTHER_LIBTOOLFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = glfw3;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		EF0A758705DF45FFBC2B9216 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = uninstall;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		F03E9331C1A74FCB90042730 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INFOPLIST_FILE = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/windows.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = windows;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		FAB8FF2274ED4992B96C4C53 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = " -I/usr/include     ";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Debug/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TriangleOrtho;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		FADAFAEE7B534DCBA35ABDF7 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		FC5B217868914222B5D255DC /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		FCE47BFA07744056BD5BC9C0 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/deps\"",
				);
				INFOPLIST_FILE = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests/CMakeFiles/tearing.dir/Info.plist";
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/Release/libglfw3.a\"",
					"-framework",
					AGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = tearing;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/tests";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		FD2C9BA8B2A74657A84B7120 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		FFEDDA81BB9C491BA7BDF730 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/bin/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/include\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/glfw/include\"",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\" \"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"";
				LIBRARY_SEARCH_PATHS = (
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw\"",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"\"/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode/glfw/src/RelWithDebInfo/libglfw3.a\"",
					/usr/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Lighting;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/yusun/Repositories/MyProjects/Up and Running with OpenGL/xcode";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		0D440A3A9ACB45729CC9B416 /* Build configuration list for PBXNativeTarget "gamma" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				3FACE78F27D2436D9EDC1110 /* Debug */,
				A82125F18D104BA58D70AEEE /* Release */,
				9BFFC7BB572D4FEEBE59DDAC /* MinSizeRel */,
				79D606D4A54F41CBADA4A934 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		0D8E6A99872041EDA2A225EB /* Build configuration list for PBXNativeTarget "Keyboard" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				144B45F5956D4BF1BD845EAB /* Debug */,
				86D5085BF35E4323BD20BF76 /* Release */,
				BB6A33B01DE446998BB87B4E /* MinSizeRel */,
				EC695F96B6654C6F974418F1 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		0F9EAD9035F44D7EB190FF7C /* Build configuration list for PBXNativeTarget "Model" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				EC3C62C04B05492E9E6B22EA /* Debug */,
				B60A14690A084560A609F150 /* Release */,
				85EC682B2A6E495DA98A96A5 /* MinSizeRel */,
				D7FC489BC50B4C1B94EF45C6 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		1D7E9C82FB144E1D969EACB2 /* Build configuration list for PBXNativeTarget "Immediate" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				37C816F2660F42C8837B2F39 /* Debug */,
				DB3DEB25861B4D00B282705A /* Release */,
				D26BD2D94DCE4FE99D90915F /* MinSizeRel */,
				AE1ADC1F6897471C91B07840 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		1D9EAC96BD534FDD85A8543D /* Build configuration list for PBXNativeTarget "ImmediateTriangles" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				63F590DD0F7746EE81C3C564 /* Debug */,
				B7D8E7D942914647ADC84822 /* Release */,
				32682C7AB4E04129BC093FEE /* MinSizeRel */,
				670326471EE74EF492B6B725 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		29FBEF24BF334E4A82A27C00 /* Build configuration list for PBXNativeTarget "tearing" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				10E71D8EA2174704AB86472F /* Debug */,
				FCE47BFA07744056BD5BC9C0 /* Release */,
				58F003D1AB434088AFB0F6D6 /* MinSizeRel */,
				A062EFA62F1A49848FCEFC8B /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2D2BF88F25344F1783459526 /* Build configuration list for PBXNativeTarget "joysticks" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				1D1BA1265B92457EAA6D42C6 /* Debug */,
				05BDB1F4C6C749538745CDAA /* Release */,
				94E6581C36E441B7B00F531B /* MinSizeRel */,
				91948C2195C34449AF2B13A6 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2EBF62BE5FC34D9B83F4E533 /* Build configuration list for PBXNativeTarget "glfw" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				EE0AB3907767437FBD4364E0 /* Debug */,
				93A2E3B72DEC4B0A990962DC /* Release */,
				6F051EA3059C4C1685598A4A /* MinSizeRel */,
				49F61297F70E4010A110AA96 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2F19E4C35584470199B862A6 /* Build configuration list for PBXNativeTarget "peter" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				1A998F6C81714F54AC1A633C /* Debug */,
				5593240837FD4B74AC9EE41D /* Release */,
				271B85E9E73C40BAABA45DA1 /* MinSizeRel */,
				49061B8BCB8D41FBABC258CF /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		3DA71004E467470BB655C528 /* Build configuration list for PBXProject "UaR_OpenGL" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				C9C359D86C7C40579B17411E /* Debug */,
				55B84C3FB05440159F2C335E /* Release */,
				AFCC608DA01E4BF590D3421A /* MinSizeRel */,
				74689524945545A4A86BCFEA /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		3E40C066339D4ECEB1CBC630 /* Build configuration list for PBXAggregateTarget "ALL_BUILD" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				50D719DD8E4E41C6AC04A6EB /* Debug */,
				4783B6BB72F347C89A18CA3C /* Release */,
				BD1948ECAC3D4EBD814DC0E6 /* MinSizeRel */,
				FC5B217868914222B5D255DC /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		3F6DBBDA9DD64C99A84156C0 /* Build configuration list for PBXNativeTarget "Version" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				CCA5A771BE9F407EA628A752 /* Debug */,
				C027F3C0EDB74AFC81F0E3DF /* Release */,
				47A95A55152247788B17B59C /* MinSizeRel */,
				6655386E74DB4F5DBB4813CE /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		45A8742B7B6B47D6B2B808A9 /* Build configuration list for PBXNativeTarget "Lighting" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				673EDB8B8F8B4AE2BE21FB14 /* Debug */,
				B89787F99A6F47D4A1841276 /* Release */,
				B551B12904CC49C292480522 /* MinSizeRel */,
				FFEDDA81BB9C491BA7BDF730 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		4D56261E1A854105B1F0D710 /* Build configuration list for PBXNativeTarget "accuracy" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				74D88F0F2EE64A20948235C5 /* Debug */,
				5AC2D02016D24168A53F88C8 /* Release */,
				9FC4E37FB9CC44C5AE579B33 /* MinSizeRel */,
				B686010F95E24ED2AD8BA46B /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		4F485468871246B48E9B2379 /* Build configuration list for PBXNativeTarget "Texture" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				03DFDFB1674541CA8CA50A09 /* Debug */,
				773D8421DCAB42C88752771F /* Release */,
				235F88002DB348738D8AB7C6 /* MinSizeRel */,
				8F77CFD5E2D04029B7E22238 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		54152A26B5684FFF91A50C38 /* Build configuration list for PBXNativeTarget "modes" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				D066279434574D7CB121CDEE /* Debug */,
				09E3ED56CEBB4B529EE20C53 /* Release */,
				C3EEF00F20534A778CD7E28B /* MinSizeRel */,
				792DFB07E1224E4EA5DCB9A9 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		569D183B33394E658E5F6863 /* Build configuration list for PBXNativeTarget "iconify" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				1BA636A6036442A5B1590A83 /* Debug */,
				06ED81F183B3425B9997323A /* Release */,
				ECB8BAB67BE540DD86B4A4A5 /* MinSizeRel */,
				6862A8D4801241EEB8A859B1 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		577AC4C4039B4001BCB76395 /* Build configuration list for PBXNativeTarget "events" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				31D44E5EEE714E53A7D8D6F8 /* Debug */,
				659380947C204680BF32D558 /* Release */,
				2AED14B9EDE8411FA6A44DF4 /* MinSizeRel */,
				406513A5DCDC41FFB84AAD66 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		5F6F666FD8124FA384FC5AD7 /* Build configuration list for PBXNativeTarget "TextureLoader" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				760E9125CC1E4B4199E430C7 /* Debug */,
				BEA685DF548F47699765752E /* Release */,
				04C63E2695D74CD7B180F78D /* MinSizeRel */,
				1D4AD309D46A465BA973F948 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		6A077C2507F64321851AA2E7 /* Build configuration list for PBXNativeTarget "TriangleColorBuffer" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				73470A258F4140118F8F8302 /* Debug */,
				0634D3D479C1458DB640275A /* Release */,
				37C9DD1A254A48A6AA037A15 /* MinSizeRel */,
				38578565D54B4F69AC0974F0 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		6B9B7AA460AF4FA5A6CC8C4F /* Build configuration list for PBXNativeTarget "TriangleBuffer" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				29D2156C56294004B991CAEA /* Debug */,
				41560EB3DE364529ADDB0F8D /* Release */,
				EAE28EE7F0AE4EC8874DA328 /* MinSizeRel */,
				8B91BDB9547C49A094B55ED9 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		7028E8CC8866444F9583DD3C /* Build configuration list for PBXNativeTarget "ModelView" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2428DC0C7704456D81D423C4 /* Debug */,
				E5516BA1D0004F28970AA2E1 /* Release */,
				8C8D3BCE202448DAB0711B1F /* MinSizeRel */,
				7A97D097BF98499C99CCF620 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		721BC4FF0BBA46849BA9F51C /* Build configuration list for PBXNativeTarget "Extensions" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				CEC0D82520454D53BEA5023D /* Debug */,
				A368844AEF33406EB89E6096 /* Release */,
				5EFD49EF00AC48D19338B8D7 /* MinSizeRel */,
				CB779D2D71B64E9EA9BB9706 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		75619114232F48628BCB9B58 /* Build configuration list for PBXAggregateTarget "ZERO_CHECK" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				FADAFAEE7B534DCBA35ABDF7 /* Debug */,
				5E0D98B714154CF9878607B4 /* Release */,
				52475041FEAD407C9B835A1D /* MinSizeRel */,
				837094156BBA4E93B796847D /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		76AA93B7B12948B591FF402D /* Build configuration list for PBXNativeTarget "fsaa" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				9641A1F6D6194A138EADC9E3 /* Debug */,
				7D52795D8B6145D3832A133F /* Release */,
				D86F2B6F99334899B7E3BE06 /* MinSizeRel */,
				BFBEFAEFD3F0410685CBBC75 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		885A49B560B3411D81A9359E /* Build configuration list for PBXNativeTarget "Mouse" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				5E9C5B284492492AACF8F45B /* Debug */,
				21D4E5119E8149D39ADB5CF2 /* Release */,
				C6B62EA56D544522BE18D0A5 /* MinSizeRel */,
				51EC2B2EB2DC46BDB294181B /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		89C17EBEED1D4340AC773629 /* Build configuration list for PBXAggregateTarget "uninstall" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				EF0A758705DF45FFBC2B9216 /* Debug */,
				9C10D22471824013AC1F32D1 /* Release */,
				B9DF0A8E43304D42BB03D0F6 /* MinSizeRel */,
				2906C78FEC1346DDBD645B24 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		908109C8856F4EBDB84BB5C6 /* Build configuration list for PBXNativeTarget "title" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				6BED1D3101F84D518CB57F99 /* Debug */,
				9254A89FD10C47AFB279D433 /* Release */,
				1EF22B137D764FE4A0B70134 /* MinSizeRel */,
				EDD469E136C24870B91C310B /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		90A558FEE59A45F2920545FB /* Build configuration list for PBXAggregateTarget "install" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				FD2C9BA8B2A74657A84B7120 /* Debug */,
				CFF66833A5304B0E96953FC6 /* Release */,
				07D5AEC9091A46CEBDF8A6BA /* MinSizeRel */,
				89E79B05BFF74957B9ADFFB5 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		A0128A74A996447080CA264C /* Build configuration list for PBXNativeTarget "DynamicMesh" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				3795259B921A471AB5578530 /* Debug */,
				C6E874891CF445C89020FD6F /* Release */,
				66E949A6420D4AA0AD010999 /* MinSizeRel */,
				C978268928CC471787EF0ABF /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		B78DBEB2CD96419BBD192388 /* Build configuration list for PBXNativeTarget "GLFWApp" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				ADB1D140C5A2465D8B0A3975 /* Debug */,
				80A32E396CCB4A02801C90EC /* Release */,
				BCEE901F0A38451AB34543A7 /* MinSizeRel */,
				2B0EF9B8A4CD420F8C64D20C /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		B78EA011EC0B4515B5D6A302 /* Build configuration list for PBXNativeTarget "clipboard" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				88B1733B02434CD2BD8BAC84 /* Debug */,
				70936BA86CF94515943165B6 /* Release */,
				18A5703DBFCC4EC5BC416635 /* MinSizeRel */,
				BE3B56150C6C44B2BC8CC49D /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		B95C68F9637B42459232E033 /* Build configuration list for PBXNativeTarget "glfwinfo" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				41F7BF7E25FE43CE80169249 /* Debug */,
				2F4F614AAE4248EA9E62A17E /* Release */,
				BA5741E7DA0D467DAE497E4A /* MinSizeRel */,
				DFAA1D7BC4EC4C14A01E69B2 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		CA45272E33C649F09513B7E0 /* Build configuration list for PBXNativeTarget "GLFWwindow" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				DB3635B6E5C24212B123B018 /* Debug */,
				788613907D194EE09FE98296 /* Release */,
				7C0C4D35D2244315984F5A14 /* MinSizeRel */,
				6580AEE2AE5C4190B21EFC39 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		CE89069F3EED4635B399F5BB /* Build configuration list for PBXNativeTarget "windows" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				B3B8C9F6AE994A37A89EC49B /* Debug */,
				126010248AF24E088CB824DA /* Release */,
				CDC4A9E77AA947DFADA05588 /* MinSizeRel */,
				F03E9331C1A74FCB90042730 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		D52E8403E14141D99F6F9558 /* Build configuration list for PBXNativeTarget "Cube" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				55985735F9FE4F23A5A35823 /* Debug */,
				961BAAE98CB64AFAB581328A /* Release */,
				13F704CDDE1D490C8EE8ED3F /* MinSizeRel */,
				71B251544FC4470EB083BBB3 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		DA6056F5C585470DBCD250EB /* Build configuration list for PBXNativeTarget "LightingAndTexture" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				A1379C39B3864221AD0BC488 /* Debug */,
				27AEAC8E016A4ED2A893DAFF /* Release */,
				913701797E044DFEBC7CD564 /* MinSizeRel */,
				7D88486C2071425A933654C3 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		DB07BDDD2D1F4C688144CD8C /* Build configuration list for PBXNativeTarget "sharing" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				BC540CBC0B404B2589B752B4 /* Debug */,
				30FC253D0C8F469CBFEDE4B7 /* Release */,
				A27C711200AB49D29BD1386C /* MinSizeRel */,
				79B3DEB517E74EEA91DD7506 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		DF5B6E838D014112864F80DF /* Build configuration list for PBXNativeTarget "TriangleOrtho" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				FAB8FF2274ED4992B96C4C53 /* Debug */,
				A6540BD80EC6411F918D7359 /* Release */,
				D8C0E67315F94A66B72A9D2F /* MinSizeRel */,
				9FC71CFDDB4E4E6BB9AC18AF /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		E8046E2DC7E54C9393F77492 /* Build configuration list for PBXNativeTarget "threads" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				6571101AC65949A791D8617E /* Debug */,
				51122B12455C438EBFAB4506 /* Release */,
				6AF2BA6A95E14064A881380B /* MinSizeRel */,
				0946CC72DF8E47CCAE653372 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		FF007A9B78104B52A1019C44 /* Build configuration list for PBXNativeTarget "reopen" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				82B109851AB24244A5382AFF /* Debug */,
				46034A437C394A60B2D3FBA2 /* Release */,
				6FABB9505A054C849F27BEC7 /* MinSizeRel */,
				4E08B9A04E62402FAC0B1FBD /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		FF4CFDAC9C8A452CBE4B563E /* Build configuration list for PBXNativeTarget "defaults" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				0A34C9F475894D17AF0FE7AD /* Debug */,
				2487F28CFAD74050A65BB228 /* Release */,
				4C6241B1D9C9475DA033AFD2 /* MinSizeRel */,
				1341ABCF9A7F440894901BA8 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
/* End XCConfigurationList section */
	};
	rootObject = 26BABEEB8B04403F9FB5B420 /* Project object */;
}
